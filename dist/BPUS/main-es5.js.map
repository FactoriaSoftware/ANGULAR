{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.routes.ts","webpack:///src/app/config/config.ts","webpack:///src/app/login/login/login.component.ts","webpack:///src/app/login/login/login.component.html","webpack:///src/app/login/requisitos/requisitos.component.ts","webpack:///src/app/login/requisitos/requisitos.component.html","webpack:///src/app/models/solicitud.ts","webpack:///src/app/models/usuario.model.ts","webpack:///src/app/pages/modalidades/modalidades.component.ts","webpack:///src/app/pages/modalidades/modalidades.component.html","webpack:///src/app/pages/pages.component.ts","webpack:///src/app/pages/pages.component.html","webpack:///src/app/pages/pages.module.ts","webpack:///src/app/pages/pages.routes.ts","webpack:///src/app/pages/panel-principal/main/main.component.ts","webpack:///src/app/pages/panel-principal/main/main.component.html","webpack:///src/app/pages/panel-principal/perfil/perfil.component.ts","webpack:///src/app/pages/panel-principal/perfil/perfil.component.html","webpack:///src/app/pages/solicitudes/pasantia/pasantia/pasantia.component.ts","webpack:///src/app/pages/solicitudes/pasantia/pasantia/pasantia.component.html","webpack:///src/app/pages/solicitudes/proyecto/anteproyecto/anteproyecto.component.ts","webpack:///src/app/pages/solicitudes/proyecto/anteproyecto/anteproyecto.component.html","webpack:///src/app/pages/solicitudes/proyecto/doc-final/doc-final.component.ts","webpack:///src/app/pages/solicitudes/proyecto/doc-final/doc-final.component.html","webpack:///src/app/pages/solicitudes/proyecto/formulario-inscripcion/formulario-inscripcion.component.ts","webpack:///src/app/pages/solicitudes/proyecto/formulario-inscripcion/formulario-inscripcion.component.html","webpack:///src/app/pages/solicitudes/proyecto/proyecto/proyecto.component.ts","webpack:///src/app/pages/solicitudes/proyecto/proyecto/proyecto.component.html","webpack:///src/app/pages/solicitudes/proyecto/seguimiento-modalidad/seguimiento-modalidad.component.ts","webpack:///src/app/pages/solicitudes/proyecto/seguimiento-modalidad/seguimiento-modalidad.component.html","webpack:///src/app/pages/solicitudes/proyecto/sustentacion/sustentacion.component.ts","webpack:///src/app/pages/solicitudes/proyecto/sustentacion/sustentacion.component.html","webpack:///src/app/pages/solicitudes/semillero/semillero/semillero.component.ts","webpack:///src/app/pages/solicitudes/semillero/semillero/semillero.component.html","webpack:///src/app/pipes/imagen.pipe.ts","webpack:///src/app/pipes/pipes.module.ts","webpack:///src/app/services/document/document.service.ts","webpack:///src/app/services/guards/login-guard.guard.ts","webpack:///src/app/services/login/login.service.ts","webpack:///src/app/services/modalidad/modalidad.service.ts","webpack:///src/app/services/programa/programa.service.ts","webpack:///src/app/services/proyectoGrado/proyecto-grado.service.ts","webpack:///src/app/services/proyectoGrado/subir-archivo.service.ts","webpack:///src/app/services/requisitos/requisitos.service.ts","webpack:///src/app/services/service.index.ts","webpack:///src/app/services/service.module.ts","webpack:///src/app/services/shared/shared.service.ts","webpack:///src/app/services/sidebar/sidebar.service.ts","webpack:///src/app/shared/breadcrumbs/breadcrumbs.component.ts","webpack:///src/app/shared/breadcrumbs/breadcrumbs.component.html","webpack:///src/app/shared/navbar/navbar.component.ts","webpack:///src/app/shared/navbar/navbar.component.html","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shared/sidebar/sidebar.component.ts","webpack:///src/app/shared/sidebar/sidebar.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","init_plugins","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","appRoutes","path","component","data","titulo","APP_ROUTES","useHash","URL_SERVICES","LoginComponent","__loginService","router","recordar","logout","form","usuario","value","contrasena","login","subscribe","resp","localStorage","getItem","JSON","parse","modalidad","dejaPasarModalidades","navigate","length","removeItem","ingresar","RequisitosComponent","_requisitosService","_programaService","_loginService","_modalidadesService","icon","document","getElementsByClassName","btnContinuar","getPrograma","confirmarRequisitos","calcularPorcentaje","getInfoEstudiante","info","continuar","Solicitud","nombreEst2","codigoEst2","identificacionEst2","programaEst2","correoEst2","nombreEst3","codigoEst3","identificacionEst3","programaEst3","correoEst3","titulo_proyecto","linea_investigacion","director_proyecto","formulacion_problema","alcance_limitaciones","metodologia","anteproyecto","proyecto","documento_final","notas","estado","Usuario","ModalidadesComponent","_requisitoService","modalidades","btnSeleccionar","cardHeader","porcentajeAprobado","porcentaje","estudiante","getModalidades","seleccionarModalidad","PagesComponent","styles","PagesModule","pagesRoutes","canActivate","children","redirectTo","pathMatch","PAGES_ROUTES","MainComponent","PerfilComponent","setInfo","infoPrograma","programa","nombre","administrativo","tipoUsuario","PasantiaComponent","AnteproyectoComponent","subirArchivoservice","MAX_SIZE_FILE","FormData","file","size","fire","html","name","confirmButtonText","showCancelButton","confirmButtonColor","location","reload","nombreArchivo","append","text","cancelButtonText","cancelButtonColor","result","idEstudiante","_id","uploadFile","uploadedFiles","target","files","getFile","DocFinalComponent","FormularioInscripcionComponent","_solicitudService","console","log","solicitud","tituloProyecto","lineaInvestigacion","directorProyecto","problema","alcance","postSolicitud","mostrardatos","ProyectoComponent","SeguimientoModalidadComponent","proyectoGradoService","_documentService","SustentacionComponent","SemilleroComponent","ImagenPipe","img","url","PipesModule","DocumentService","http","formulario","idModalidad","proyectogrado","get","providedIn","LoginGuardGuard","logueado","LoginService","setItem","token","post","pipe","stringify","err","error","mensaje","ModalidadService","infoEstudiante","credAprob","creditos_aprobados","creditosTotales","creditos_totales","porcent","toFixed","btnSelec","entries","i","toUpperCase","porcentajeMod","porcentaje_creditos","card","innerText","disabled","ProgramaService","idPrograma","ProyectoGradoService","id_Estudiante","ok","solicitudGuardada","SubirArchivoService","urlApi","put","RequisitosService","bien","mal","creditos","creditosAprob","modGrado","iconCred","iconMod","calculoPorcentaje","classList","add","setAttribute","ServiceModule","SharedService","SidebarService","BreadcrumbsComponent","meta","getDataRoutes","setTitle","metaTag","content","updateTag","events","evento","snapshot","firstChild","NavbarComponent","irPerfil","SharedModule","SidebarComponent","EstadoPreInsc","EstadoAnte","estado_anteproyecto","EstadoProy","estado_proyecto","EstadoDoc","estado_documento_final","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\ndeclare function init_plugins();\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'BPUS';\n\n  ngOnInit() {\n    init_plugins();\n\n  }\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n\n// Modulos\nimport { AppRoutingModule } from './app-routing.module';\nimport { PagesModule } from './pages/pages.module';\nimport { ServiceModule } from './services/service.module';\nimport { CommonModule } from '@angular/common';\nimport { DocumentService } from './services/document/document.service';\n\n\n\n// Componentes\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login/login.component';\nimport { RequisitosComponent } from './login/requisitos/requisitos.component';\n\n// Forms\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n// Rutas\nimport { APP_ROUTES } from './app.routes';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SubirArchivoService } from './services/proyectoGrado/subir-archivo.service';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RequisitosComponent,\n    \n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    APP_ROUTES,\n    PagesModule,\n    ServiceModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    BrowserModule,\n    HttpClientModule,\n    \n   \n    \n  ],\n  providers: [ SubirArchivoService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login/login.component';\nimport { PagesComponent } from './pages/pages.component';\nimport { RequisitosComponent } from './login/requisitos/requisitos.component';\n\n\n\n// Rutas principales de la aplicación\nconst appRoutes: Routes = [\n\n    {path: 'login', component: LoginComponent, data: {titulo: 'login'}},\n    {path: 'requisitos', component: RequisitosComponent, data: {titulo: 'requisitos'} },\n    {path: '', component: PagesComponent}\n    \n];\n\nexport const APP_ROUTES = RouterModule.forRoot( appRoutes, { useHash:true } );","// Exportamos la url que vamos a utlizar para accder al servidor\nexport const URL_SERVICES = 'http://localhost:3000';","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { LoginService } from 'src/app/services/service.index';\nimport { Usuario } from '../../models/usuario.model';\nimport { JsonPipe } from '@angular/common';\n\ndeclare function init_plugins();\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  // la variable recordar pertenece al check \"recordarme\", por defecto será falso\n  recordar: boolean = false;\n  usuario: string;\n\n  // Inyectamos el servicio del login, y el Router\n  constructor(public __loginService: LoginService, public router: Router) {}\n\n  ngOnInit(): void {\n    init_plugins();\n\n    // Siempre cuando se cargue el login, va a activar la función\n    this.logout();\n  }\n\n  // Se crea la función que se activará cuando se presione el botón de iniciar sesión\n  ingresar(form: NgForm) {\n    // Se crea una variable de tipo Usuario\n    let usuario = new Usuario(form.value.usuario, form.value.contrasena);\n\n    // Llamamos a la función login del servicio Login y le pasamos el usuario y la variable recordar\n    this.__loginService.login(usuario, this.recordar).subscribe((resp) => {\n      // Si se inicia un estudiante...\n      if (localStorage.getItem('estudiante')) {\n        if (JSON.parse(localStorage.getItem('estudiante')).modalidad) {\n\n          this.__loginService.dejaPasarModalidades();\n          this.router.navigate(['/panel-principal']);\n\n        } else {\n          this.router.navigate(['/requisitos']);\n        }\n\n      } else {\n        this.router.navigate(['/panel-principal']);\n      }\n    });\n  }\n\n  // Función para eliminar los datos de sesión\n  logout() {\n    // Asignamos a la variable global usuario, el usuario que obtenemos del localStorage\n    this.usuario = localStorage.getItem('usuario') || '';\n\n    // Si existe ese usuario\n    if (this.usuario.length > 0) {\n      this.recordar = true;\n    }\n\n    // Se eliminan los datos de inicio de sesión\n    localStorage.removeItem('token');\n    localStorage.removeItem('id');\n\n    // Si es estudiante, se elimina el campo estudiante, si no...\n    if (localStorage.getItem('estudiante')) {\n      localStorage.removeItem('estudiante');\n    } else {\n      localStorage.removeItem('administrativo');\n    }\n\n    // En resumen, si el check está activado, sólo deja el dato del usuario \"recordado\"\n  }\n}\n","<!-- ============================================================== -->\n<!-- Main wrapper - style you can find in pages.scss -->\n<!-- ============================================================== -->\n<section id=\"wrapper\" class=\"login-register login-sidebar\" style=\"background-image:url(../assets/images/background/USCO-Huila.jpg );\">\n    <div class=\"login-box card\">\n        <div class=\"card-body\">\n            <form ngNativeValidate #f=\"ngForm\" (ngSubmit)=\"ingresar(f)\" class=\"form-horizontal floating-labels\" id=\"loginform\">\n                <a href=\"https://www.usco.edu.co/es/\" class=\"text-center db\"><img src=\"../assets/images/logos/logo-vertical-usco.png\" alt=\"Home\" /></a>\n                <br>\n                <div class=\"textTitle\">\n                    <p id=\"textoLog\">INSCRIPCIÓN DE MODALIDAD DE GRADO</p>\n                    <p id=\"textoLog\">FACULTAD DE INGENIERÍA</p>\n                </div>\n                <div class=\"form-group m-t-40\">\n                    <div class=\"col-xs-12\">\n                        <input [(ngModel)]=\"usuario\" name=\"usuario\" id=\"inputUsuario\" class=\"form-control floating-labels\" type=\"text\" required>\n                        <span class=\"bar\"></span>\n                        <label for=\"inputUsuario\">Usuario</label>\n                    </div>\n                </div>\n                <br>\n                <div class=\"form-group\">\n                    <div class=\"col-xs-12\">\n                        <input ngModel name=\"contrasena\" id=\"inputContra\" class=\"form-control\" type=\"password\" required>\n                        <span class=\"bar\"></span>\n                        <label for=\"inputContra\">Contraseña</label>\n                    </div>\n                </div>\n                <br>\n\n                <div class=\"form-group row\">\n                    <div class=\"col-md-12\">\n                        <div class=\"checkbox checkbox-primary pull-left p-t-0\">\n                            <input [(ngModel)]=\"recordar\" name=\"recordar\" id=\"checkbox-signup\" type=\"checkbox\" class=\"filled-in chk-col-red\">\n                            <label for=\"checkbox-signup\"> Recordarme </label>\n                        </div>\n                        <a href=\"https://www.usco.edu.co/cambio_clave/ \" id=\"to-recover \" class=\"text-dark pull-right \"><i class=\"fa fa-lock m-r-5 \"></i> Olvidé Mi Contraseña</a> </div>\n                </div>\n\n                <div class=\"form-group text-center m-t-20 \">\n                    <div class=\"col-xs-12 \">\n                        <button id=\"btnLogin\" class=\"btn btn-md btn-block text-uppercase \" type=\"submit \"><b>INGRESAR</b>&nbsp; &nbsp;<i class=\"fa fa-arrow-right \"></i></button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</section>\n<!-- ============================================================== -->\n<!-- End Wrapper -->\n<!-- ============================================================== -->","import { Component, OnInit, Inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n  RequisitosService,\n  LoginService,\n  ProgramaService,\n  ModalidadService,\n} from 'src/app/services/service.index';\n\ndeclare function init_plugins();\n\n@Component({\n  selector: 'app-requisitos',\n  templateUrl: './requisitos.component.html',\n  styleUrls: ['./requisitos.component.css'],\n})\nexport class RequisitosComponent implements OnInit {\n  // Se capturan los elementos html que van a cambiar\n  icon: any = document.getElementsByClassName('fa');\n  btnContinuar: any = document.getElementsByClassName('btn');\n  info: any;\n\n  // Inyectamos todos los servicios que necesitamos\n  constructor(\n    public router: Router,\n    public _requisitosService: RequisitosService,\n    public _programaService: ProgramaService,\n    public _loginService: LoginService,\n    public _modalidadesService: ModalidadService\n  ) {}\n\n  ngOnInit() {\n    init_plugins();\n    // Se llama la función confirmarRequisitos y se le pasa los elementos capturados\n    this._programaService.getPrograma();\n    this._requisitosService.confirmarRequisitos(this.btnContinuar, this.icon);\n\n    // Cargamos el porcentaje de los créditos cumplidos por el estudiante.\n    this._modalidadesService.calcularPorcentaje();\n\n    this.getInfoEstudiante();\n  }\n\n  // Función que se llama cuando se da click en el botón \"continuar\"\n  continuar() {\n    this._loginService.dejaPasarModalidades();\n  }\n\n  // Asignamos a la variable global \"info\" la información del estudiante\n  getInfoEstudiante() {\n    this.info = JSON.parse(localStorage.getItem('estudiante'));\n  }\n}\n","<!-- ============================================================== -->\n<!-- Main wrapper - style you can find in pages.scss -->\n<!-- ============================================================== -->\n\n<div class=\"login-register\" style=\"background-color: #5C0E12;\">\n    <div class=\"requisitos-box\">\n        <div class=\"text-center\">\n            <br>\n\n            <img src=\"assets/images/logos/logo-horizontal.png\" alt=\"\">\n            <br>\n            <br>\n\n            <div class=\"text-uppercase\">\n                <h5 class=\"font-weight-bold\">Requisitos Mínimos para Solicitud de Modalidad de Grado</h5>\n                <small style=\"color: #8F141B;\"> <b> {{ info.nombres }} {{ info.apellidos }} </b> </small>\n            </div>\n            <br>\n        </div>\n\n        <div class=\"list-box\">\n            <ul>\n                <li>Tener mínimo el 50% de los créditos aprobados &nbsp; &nbsp; &nbsp; <i class=\"fa\"></i> </li>\n                <br>\n                <li>Haber aprobado el curso de Modalidad de grado &nbsp; &nbsp; <i class=\"fa\"></i> </li>\n                <br>\n            </ul>\n\n        </div>\n        <div class=\"text-center\">\n\n            <div class=\"botones-aceptar\">\n                <button routerLink='/login' id=\"btnRegresar\" class=\"btn btn-info btn-md text-uppercase\" type=\"submit\"><i class=\"fa fa-arrow-left\"></i>&nbsp; &nbsp;<b>Regresar</b> </button>&nbsp; &nbsp; &nbsp;\n                <button (click)=\"continuar()\" routerLink='/modalidades' class=\"btn btn-info btn-md text-uppercase\" type=\"submit\" disabled><b>Continuar</b>&nbsp; &nbsp;<i class=\"fa fa-arrow-right\"></i></button>\n            </div>\n\n        </div>\n        <br><br>\n    </div>\n</div>\n\n<!-- ============================================================== -->\n<!-- End Wrapper -->\n<!-- ============================================================== -->","export class Solicitud {\r\n    // Modelo de solicitud\r\n    constructor(\r\n    public    nombreEst2:  String,\r\n    public    codigoEst2:  String,  \r\n    public    identificacionEst2:  String,  \r\n    public    programaEst2:  String,  \r\n    public    correoEst2:  String,\r\n    public    nombreEst3:  String,\r\n    public    codigoEst3:  String,  \r\n    public    identificacionEst3:  String,  \r\n    public    programaEst3:  String,  \r\n    public    correoEst3:  String,       \r\n    public    titulo_proyecto:  String,\r\n    public    linea_investigacion:  String,\r\n    public    director_proyecto:  String,\r\n    public    formulacion_problema:  String,\r\n    public    alcance_limitaciones:  String,\r\n    public    metodologia:  String,\r\n    public    anteproyecto?:  String,\r\n    public    proyecto?:  String,\r\n    public    documento_final?:  String,\r\n    public    notas?:  String,\r\n    public    estado?:  String\r\n    \r\n        ) {}\r\n  }\r\n  ","export class Usuario {\n  // Modelo de Usuario\n  constructor(public usuario: string, public contrasena: string) {}\n}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  RequisitosService,\n  ModalidadService,\n  ProgramaService,\n} from 'src/app/services/service.index';\nimport { Modalidad } from 'src/app/models/modalidad.model';\n\ndeclare function init_plugins();\n\n@Component({\n  selector: 'app-modalidades',\n  templateUrl: './modalidades.component.html',\n  styleUrls: ['./modalidades.component.css'],\n})\nexport class ModalidadesComponent implements OnInit {\n  info: any; // Almacenará la info del estudiante (en JSON)\n  modalidades: any[] = []; // Lista que almacenará la información de las modalidades\n  porcentajeAprobado: Number; // Porcentaje de créditos aprobados del estudiante\n\n  // Obtenemos los elementos que vamos a desactivar si el estudiante no cumple con el porcentaje\n  btnSeleccionar: any = document.getElementsByClassName('btn');\n  cardHeader: any = document.getElementsByClassName('card-header');\n\n  // Inyectamos los servicios\n  constructor(\n    public _requisitoService: RequisitosService,\n    public _modalidadesService: ModalidadService,\n    public _programaService: ProgramaService\n  ) {}\n\n  ngOnInit(): void {\n    init_plugins();\n\n    // Pasamos el porcentaje calculado en el servicio de la modalidad al la variable \"porcentajeAprobado\"\n    this.porcentajeAprobado = this._modalidadesService.porcentaje;\n\n    // Obtenemos la información del estudiante y se la pasamos a la variable info\n    let estudiante = JSON.parse(localStorage.getItem('estudiante'));\n    this.info = estudiante;\n\n    this.getModalidades();\n\n    // Enviamos los elemntos que queremos al servicio de la modalidad\n    this._modalidadesService.seleccionarModalidad(\n      this.btnSeleccionar,\n      this.cardHeader\n    );\n  }\n\n  // Función que nos permite obtener la información de las modalidades\n  getModalidades() {\n    this._modalidadesService.getModalidades().subscribe((resp: any) => {\n      this.modalidades = resp.modalidades;\n    });\n  }\n}\n","<!-- ============================================================== -->\n<!-- Main wrapper - style you can find in pages.scss -->\n<!-- ============================================================== -->\n\n<div class=\"login-register\" style=\"background-color: #5C0E12;\">\n    <div class=\"requisitos-box\">\n\n        <br>\n\n        <a routerLink='/login' id=\"btnRegresar\" class=\"text-uppercase\" type=\"submit\"><i class=\"fa fa-times\"></i>&nbsp;<b><b>salir</b></b> </a>\n\n        <div class=\"contenido\">\n            <div class=\"text-center\">\n                <img src=\"assets/images/logos/logo-horizontal.png\" alt=\"\">\n                <br>\n                <br>\n\n                <div class=\"text-uppercase text-center\">\n                    <h5 class=\"font-weight-bold\">Bienvenido(a) {{ info.nombres }}, por favor selecciona tu modalidad de Grado</h5>\n                    <small> \n                    Recuerda que has cumplido con el {{ porcentajeAprobado }}% ({{ info.creditos_aprobados }}) \n                    de los créditos totales de tu carrera.\n                </small>\n                </div>\n                <br>\n            </div>\n\n\n            <div class=\"row\">\n\n                <div class=\"col-md-4\" *ngFor=\"let modalidad of modalidades\">\n\n                    <div class=\" card-info border border-secondary rounded \">\n                        <h6 class=\"card-header text-uppercase \" style=\"background-color: #8F141B; color: #ffffff; \"><b>{{ modalidad.nombre }}</b> </h6>\n                        <div class=\"card-body \" style=\"border-color: #8F141B; \">\n                            <h5 class=\"card-title \">Requisitos:</h5>\n                            <ul>\n                                <li>\n                                    <p> Cumplir más del {{ modalidad.porcentaje_creditos *100 }}% de los créditos totales. </p>\n                                </li>\n\n                                <li>\n                                    <p> Haber aprobado el curso de Modalidad de grado. </p>\n                                </li>\n                            </ul>\n\n                            <div class=\"text-left \">\n                                <div class=\"btnSolicitud \">\n                                    <button routerLink=\"{{modalidad.url}}\" class=\"btn btn-sm \" disabled><i class=\"fa fa-clipboard \" ></i>&nbsp; <b>Hacer Solicitud</b> </button>\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<!-- ============================================================== -->\n<!-- End Wrapper -->\n<!-- ============================================================== -->","import { Component, OnInit } from '@angular/core';\nimport { LoginService, ProgramaService } from '../services/service.index';\n\ndeclare function init_plugins();\n\n@Component({\n  selector: 'app-pages',\n  templateUrl: './pages.component.html',\n  styles: [],\n})\nexport class PagesComponent implements OnInit {\n  // No estoy muy seguro si se usa, pero lo dejo por si acaso :v\n  constructor(\n    public _loginService: LoginService,\n    public _programaService: ProgramaService\n  ) {}\n\n  ngOnInit(): void {\n    init_plugins();\n  }\n}\n","<!-- ============================================================== -->\n<!-- Main wrapper - style you can find in pages.scss -->\n<!-- ============================================================== -->\n<div id=\"main-wrapper\">\n\n    <!-- Selector del header -->\n    <app-navbar></app-navbar>\n\n    <!-- Selector del sidebar -->\n    <app-sidebar></app-sidebar>\n\n\n    <!-- ============================================================== -->\n    <!-- Page wrapper  -->\n    <!-- ============================================================== -->\n    <div class=\"page-wrapper\">\n\n        <!-- ============================================================== -->\n        <!-- Container fluid  -->\n        <!-- ============================================================== -->\n        <div class=\"container-fluid\">\n\n            <app-breadcrumbs></app-breadcrumbs>\n\n            <!-- ============================================================== -->\n            <!-- Start Page Content -->\n            <!-- ============================================================== -->\n            <router-outlet></router-outlet>\n            <!-- ============================================================== -->\n            <!-- End PAge Content -->\n            <!-- ============================================================== -->\n        </div>\n        <!-- ============================================================== -->\n        <!-- End Container fluid  -->\n        <!-- ============================================================== -->\n    </div>\n    <!-- ============================================================== -->\n    <!-- End Page wrapper  -->\n    <!-- ============================================================== -->\n\n\n\n</div>\n<!-- ============================================================== -->\n<!-- End Main wrapper - style you can find in pages.scss -->\n<!-- ============================================================== -->","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// Componentes\nimport { MainComponent } from './panel-principal/main/main.component';\nimport { PagesComponent } from './pages.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { PerfilComponent } from './panel-principal/perfil/perfil.component';\nimport { PasantiaComponent } from './solicitudes/pasantia/pasantia/pasantia.component';\nimport { SemilleroComponent } from './solicitudes/semillero/semillero/semillero.component';\nimport { ModalidadesComponent } from './modalidades/modalidades.component';\n\n\n// Rutas de pages\nimport { PAGES_ROUTES } from './pages.routes';\n\n// Pipes\nimport { PipesModule } from '../pipes/pipes.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormularioInscripcionComponent } from './solicitudes/proyecto/formulario-inscripcion/formulario-inscripcion.component';\nimport { SeguimientoModalidadComponent } from './solicitudes/proyecto/seguimiento-modalidad/seguimiento-modalidad.component';\nimport { AnteproyectoComponent } from './solicitudes/proyecto/anteproyecto/anteproyecto.component';\nimport { ProyectoComponent } from './solicitudes/proyecto/proyecto/proyecto.component';\nimport { DocFinalComponent } from './solicitudes/proyecto/doc-final/doc-final.component';\nimport { FormsModule } from '@angular/forms';\nimport { SustentacionComponent } from './solicitudes/proyecto/sustentacion/sustentacion.component';\n\n\n@NgModule({\n  declarations: [\n    PagesComponent,\n    MainComponent,\n    PerfilComponent,\n    PasantiaComponent,\n    FormularioInscripcionComponent,\n    SemilleroComponent,\n    ModalidadesComponent,\n    FormularioInscripcionComponent,\n    SeguimientoModalidadComponent,\n    AnteproyectoComponent,\n    ProyectoComponent,\n    DocFinalComponent,\n    SustentacionComponent\n\n  ],\n  exports: [\n    CommonModule,\n    PagesComponent,\n    MainComponent,\n    PerfilComponent,\n    PasantiaComponent,\n    FormularioInscripcionComponent,\n    SemilleroComponent,\n    ModalidadesComponent,\n    ProyectoComponent\n  ],\n  imports: [\n    SharedModule,\n    PAGES_ROUTES,\n    PipesModule,\n    BrowserModule,\n    FormsModule\n  ]\n})\nexport class PagesModule { }\n","import { Routes, RouterModule } from '@angular/router';\n\nimport { PagesComponent } from './pages.component';\nimport { MainComponent } from './panel-principal/main/main.component';\nimport { LoginGuardGuard } from '../services/service.index';\nimport { PerfilComponent } from './panel-principal/perfil/perfil.component';\nimport { PasantiaComponent } from './solicitudes/pasantia/pasantia/pasantia.component';\nimport { FormularioInscripcionComponent } from './solicitudes/proyecto/formulario-inscripcion/formulario-inscripcion.component';\nimport { SemilleroComponent } from './solicitudes/semillero/semillero/semillero.component';\nimport { ModalidadesComponent } from './modalidades/modalidades.component';\nimport { SeguimientoModalidadComponent } from './solicitudes/proyecto/seguimiento-modalidad/seguimiento-modalidad.component';\nimport { AnteproyectoComponent } from './solicitudes/proyecto/anteproyecto/anteproyecto.component';\nimport { ProyectoComponent } from './solicitudes/proyecto/proyecto/proyecto.component';\nimport { DocFinalComponent } from './solicitudes/proyecto/doc-final/doc-final.component';\nimport { SustentacionComponent } from './solicitudes/proyecto/sustentacion/sustentacion.component';\n\n\n\nconst pagesRoutes: Routes = [\n    \n    {path: 'modalidades', component: ModalidadesComponent, data: { titulo: 'Modalidades Disponibles'}, canActivate: [ LoginGuardGuard ]},\n    {path: 'solicitud-pasantia-supervisada', component: PasantiaComponent, data: { titulo: 'Solicitud Pasantía'}, canActivate:[LoginGuardGuard]}, \n    {path: 'solicitud-semillero-de-investigacion', component: SemilleroComponent, data: { titulo: 'Solicitud Semillero'}, canActivate:[LoginGuardGuard]},\n    {path: 'solicitud-proyecto-de-grado', component: FormularioInscripcionComponent, data: { titulo: 'Solicitud Proyecto'},canActivate:[LoginGuardGuard]},\n    \n    {\n        path: '',\n        component: PagesComponent,\n        canActivate: [ LoginGuardGuard ],\n        children: [\n            { path: 'panel-principal', component: MainComponent, data: { titulo: 'Panel Principal'}},\n            { path: 'perfil', component: PerfilComponent, data: { titulo: 'Perfil de Usuario' } },\n            {path: 'seguimiento-proyecto-de-grado', component: SeguimientoModalidadComponent, data: { titulo: 'Seguimiento Proyecto'},canActivate:[LoginGuardGuard]},\n            {path: 'anteproyecto', component: AnteproyectoComponent, data: { titulo: 'anteproyecto'},canActivate:[LoginGuardGuard]},\n            {path: 'proyecto', component: ProyectoComponent, data: { titulo: 'proyecto'},canActivate:[LoginGuardGuard]},\n            {path: 'documento-final', component: DocFinalComponent, data: { titulo: 'anteproyecto'},canActivate:[LoginGuardGuard]},\n            {path: 'sustentacion', component: SustentacionComponent, data: { titulo: 'sustentacion'},canActivate:[LoginGuardGuard]},\n\n            { path: '', redirectTo: '/panel-principal', pathMatch: 'full'}\n        ]\n    },\n    \n];\n\nexport const PAGES_ROUTES = RouterModule.forRoot( pagesRoutes, { useHash:true } );","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: []\n})\nexport class MainComponent implements OnInit {\n  info:any;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    // Obtenemos la información del estudiante y se la pasamos a la variable info\n    const estudiante = JSON.parse(localStorage.getItem('estudiante'));\n    this.info = estudiante;\n   \n    \n  }\n\n}\n","<div class=\"text-center\">\n    <br>\n\n    <img src=\"assets/images/logos/logo-horizontal.png\" alt=\"\">\n    <br>\n    <br>\n    <br>\n\n\n    <h1>BIENVENIDO (A) {{info.nombres}} {{ info.apellidos }}</h1>\n    <h5>Módulo de inscripción de modalidad de grado</h5>\n    <h5>Facultad de Ingeniería</h5>\n    <br>\n\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ProgramaService } from 'src/app/services/service.index';\n\ndeclare function init_plugins();\n\n@Component({\n  selector: 'app-perfil',\n  templateUrl: './perfil.component.html',\n  styleUrls: ['./perfil.component.css'],\n})\nexport class PerfilComponent implements OnInit {\n  // Creamos variables globales\n  tipoUsuario: string;\n  info: any;\n  programa: String;\n\n  // Inyectamos el servicio\n  constructor(public _programaService: ProgramaService) {}\n\n  ngOnInit() {\n    init_plugins();\n    this.setInfo();\n    this.getPrograma();\n  }\n\n  // Obtenos el programa y se lo pasamos a la variable global\n  getPrograma() {\n    this._programaService.getPrograma().subscribe((resp) => {\n      let infoPrograma = resp['programa'];\n      this.programa = infoPrograma.nombre;\n    });\n  }\n\n  // Función que pasamos el la información del estudiante y el tipo de usuario\n  setInfo() {\n    // Obtenemos información del estudiante y el administrativo\n    let estudiante = localStorage.getItem('estudiante');\n    let administrativo = localStorage.getItem('administrativo');\n\n    // Si existe el estudiante...\n    if (estudiante) {\n      this.tipoUsuario = 'estudiante';\n      this.info = JSON.parse(estudiante);\n    } else {\n      this.tipoUsuario = 'administrativo';\n      this.info = JSON.parse(administrativo);\n    }\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-5\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n\n                <h3 class=\"card-title\">Información Personal</h3>\n                <hr>\n\n\n                <div class=\"text-center\">\n                    <img [src]=\"info.imagen | imagen: tipoUsuario\" class=\"img-rounded\" height=\"130px\" width=\"110px\" alt=\"user\">\n                </div>\n\n\n                <div class=\"row p-t-20\" style=\"padding-left: 15px;\" te>\n                    <div class=\"col-lg-12\">\n                        <div class=\"form-group\">\n                            <label for=\"exampleInputuname\">Nombre Completo</label>\n                            <div class=\"input-group\">\n                                <div class=\"input-group-addon\"><i class=\"fa fa-user\"></i></div>\n                                <input type=\"text\" class=\"form-control\" id=\"exampleInputuname\" value=\"{{info.nombres}} {{ info.apellidos }}\">\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row p-t-0\" style=\"padding-left: 15px;\" te>\n                    <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                            <label for=\"exampleInputuname\">Identificación</label>\n                            <div class=\"input-group\">\n                                <div class=\"input-group-addon\"><i class=\"fa fa-id-card-o\"></i></div>\n                                <input type=\"text\" class=\"form-control\" id=\"exampleInputuname\" value=\"{{info.identificacion}}\">\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                            <label for=\"exampleInputuname\">Teléfono</label>\n                            <div class=\"input-group\">\n                                <div class=\"input-group-addon\"><i class=\"fa fa-phone\"></i></div>\n                                <input type=\"text\" class=\"form-control\" id=\"exampleInputuname\" value=\"{{info.telefono}}\">\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    </div>\n\n    <div class=\"col-7\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n\n                <h3 class=\"card-title\">Información Académica</h3>\n                <hr>\n\n                <div class=\"row p-t-0\" style=\"padding-left: 15px;\">\n\n                    <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                            <label for=\"exampleInputuname\">Perfil</label>\n                            <div class=\"input-group\">\n                                <div class=\"input-group-addon\"><i class=\"fa fa fa-user-circle-o\"></i></div>\n                                <input type=\"text\" class=\"form-control\" id=\"exampleInputuname\" value=\"{{info.rol}}\">\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                            <label for=\"exampleInputuname\">Programa</label>\n                            <div class=\"input-group\">\n                                <div class=\"input-group-addon\"><i class=\"fa fa-book\"></i></div>\n                                <input type=\"text\" class=\"form-control\" id=\"exampleInputuname\" value=\"{{programa}}\">\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n\n\n                <div class=\"row p-t-0\" style=\"padding-left: 15px;\" te>\n\n                    <div class=\"col-md-6\" *ngIf=\"info.codigo\">\n                        <div class=\"form-group\">\n                            <label for=\"exampleInputuname\">Código</label>\n                            <div class=\"input-group\">\n                                <div class=\"input-group-addon\"><i class=\"fa fa-drivers-license\"></i></div>\n                                <input type=\"text\" class=\"form-control\" id=\"exampleInputuname\" value=\"{{info.codigo}}\">\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"col-md-6\" *ngIf=\"info.creditos_aprobados\">\n                        <div class=\"form-group\">\n                            <label for=\"exampleInputuname\">Créditos Aprobados</label>\n                            <div class=\"input-group\">\n                                <div class=\"input-group-addon\"><i class=\"fa fa-check-square-o\"></i></div>\n                                <input type=\"text\" class=\"form-control\" id=\"exampleInputuname\" value=\"{{info.creditos_aprobados}}\">\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row p-t-0\" style=\"padding-left: 15px;\" te>\n                    <div class=\"col-lg-7\">\n                        <div class=\"form-group\">\n                            <label for=\"exampleInputuname\">Correo Institucional</label>\n                            <div class=\"input-group\">\n                                <div class=\"input-group-addon\"><i class=\"mdi mdi-email\"></i></div>\n                                <input type=\"text\" class=\"form-control\" id=\"exampleInputuname\" value=\"{{info.correo}}\">\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pasantia',\n  templateUrl: './pasantia.component.html',\n  styleUrls: ['./pasantia.component.css']\n})\nexport class PasantiaComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>pasantia works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport Swal from 'sweetalert2';\nimport { SubirArchivoService } from '../../../../services/proyectoGrado/subir-archivo.service';\n\n\n@Component({\n  selector: 'app-anteproyecto',\n  templateUrl: './anteproyecto.component.html',\n  styleUrls: ['./anteproyecto.component.css']\n})\nexport class AnteproyectoComponent implements OnInit {\n  uploadedFiles: Array<File>;\n  info:any;\n  nombreArchivo: string;\n  MAX_SIZE_FILE: number = 25000000;\n  anteproyecto = new FormData();\n\n  constructor(private subirArchivoservice: SubirArchivoService) { }\n\n  ngOnInit(): void {\n    // Obtenemos la información del estudiante y se la pasamos a la variable info\n    const estudiante = JSON.parse(localStorage.getItem('estudiante'));\n    this.info = estudiante;\n   \n    \n  }\n  getFile(file: File) {\n    \n    if (file.size > this.MAX_SIZE_FILE) {\n\n      Swal.fire({\n  \n        title: 'Lo Sentimos',\n        html: `<p><b>${file.name}</b>, supera las 25 MB</p>`,\n        icon: 'error',\n        confirmButtonText: 'Ok',\n        showCancelButton: false,\n        confirmButtonColor: '#60D89C',\n  \n      }).then(() => {\n        location.reload()\n      });\n    }else {\n      this.nombreArchivo = file.name;\n      let anteproyecto = <File>file;\n      this.anteproyecto.append('anteproyecto',anteproyecto,anteproyecto.name);\n\n    }\n    \n  }\n  \n  enviarpdf(){\n    Swal.fire({\n      title:`¿Seguro de subir este archivo? `,\n      text:  this.nombreArchivo,\n      icon: 'warning',\n      cancelButtonText: 'NO',\n      confirmButtonText: 'SI',\n\n      showCancelButton: true,\n      confirmButtonColor: '#60D89C',\n      cancelButtonColor: '#d33',\n      \n\n    }).then((result) => {\n      if (result.value) {\n        let idEstudiante = JSON.parse(localStorage.getItem('estudiante'))._id;\n\n          // call service\n        this.subirArchivoservice.uploadFile(idEstudiante,this.anteproyecto).subscribe();\n        \n\n      }\n    })\n  }\n\n\n\n  \n\n\n\n  onFileChange(e){\n    this.uploadedFiles = e.target.files;\n  }\n\n}\n","<div id=\"main-wrapper\">\n\n    <div class=\"container\">\n        <h1 id=\"titulo\">ANTEPROYECTO</h1>\n        <p id=\"titulo-proyecto\">TITULO:</p>\n        <a>\n                {{info.modalidad.titulo_proyecto}}\n            </a>\n\n        <p id=\"Descripcion\">DESCRIPCIÓN:</p>\n        El documento debe tener los siguientes aspectos:<br>\n        <div id=\"descripcion\">\n            <a>\n                \n                Integrantes<br>\n                Linea de Investigación<br>\n                Titulo (Debe contener máximo 20 palabras)<br>\n                Introducción (Debe contener máximo 2 hojas)<br>\n                Justificación (Debe contener máximo 1 hoja)<br>\n                Problema (Debe contener máximo 1 hoja)<br>\n                Objetivos generales y especifico (Debe contener máximo 1 hoja)<br>\n                Estado del arte (Debe contener máximo 3 hojas)<br>\n                Referencias <br>\n         \n                    <a id=\"apa\">TODO EL DOCUMENTO DEBE PRESENTARSE CON LAS NORMAS APA</a>\n            </a>\n        </div>\n\n\n\n\n\n        <div id=\"btn_subir\" class=\"row text-xl-center\">\n            <div class=\"col-lg-6\">\n                <label for=\"imagen2\" *ngIf=\"nombreArchivo == null\" class=\"labels custom-file-upload\">\n                            Click aquí para subir el Anteproyecto</label>\n\n                <label for=\"imagen2\" *ngIf=\"nombreArchivo != null\" class=\"labels custom-file-upload text-center\">{{ nombreArchivo }}</label><br>\n                <small>Recuerda que debe ser un archivo PDF, de tamaño menor a 25MB.</small><br>\n\n\n                <input name=\"imagen2\" id=\"imagen2\" (change)=\"getFile( $event.target.files[0] )\" type=\"file\" accept=\"application/pdf\" class=\"imagenes-secundarias\" /> <br> <br>\n\n                <button class=\"btn-btnSuccess\" (click)=\" enviarpdf()\" style=\"width: 50%; \"><b> Enviar\n                                documento</b></button>\n\n            </div>\n\n\n\n        </div>\n\n\n\n\n    </div>\n    <div class=\"container-fluid\"></div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport Swal from 'sweetalert2';\nimport { SubirArchivoService } from '../../../../services/proyectoGrado/subir-archivo.service';\n\n\n@Component({\n  selector: 'app-doc-final',\n  templateUrl: './doc-final.component.html',\n  styleUrls: ['./doc-final.component.css']\n})\nexport class DocFinalComponent implements OnInit {\n  uploadedFiles: Array<File>;\n  info:any;\n  nombreArchivo: string;\n  MAX_SIZE_FILE: number = 25000000;\n  anteproyecto = new FormData();\n\n  constructor(private subirArchivoservice: SubirArchivoService) { }\n\n  ngOnInit(): void {\n    // Obtenemos la información del estudiante y se la pasamos a la variable info\n    const estudiante = JSON.parse(localStorage.getItem('estudiante'));\n    this.info = estudiante;\n   \n    \n  }\n  getFile(file: File) {\n    \n    if (file.size > this.MAX_SIZE_FILE) {\n\n      Swal.fire({\n  \n        title: 'Lo Sentimos',\n        html: `<p><b>${file.name}</b>, supera las 25 MB</p>`,\n        icon: 'error',\n        confirmButtonText: 'Ok',\n        showCancelButton: false,\n        confirmButtonColor: '#60D89C',\n  \n      }).then(() => {\n        location.reload()\n      });\n    }else {\n      this.nombreArchivo = file.name;\n      let anteproyecto = <File>file;\n      this.anteproyecto.append('anteproyecto',anteproyecto,anteproyecto.name);\n\n    }\n    \n  }\n  \n  enviarpdf(){\n    Swal.fire({\n      title:`¿Seguro de subir este archivo? `,\n      text:  this.nombreArchivo,\n      icon: 'warning',\n      cancelButtonText: 'NO',\n      confirmButtonText: 'SI',\n\n      showCancelButton: true,\n      confirmButtonColor: '#60D89C',\n      cancelButtonColor: '#d33',\n      \n\n    }).then((result) => {\n      if (result.value) {\n        let idEstudiante = JSON.parse(localStorage.getItem('estudiante'))._id;\n\n          // call service\n        this.subirArchivoservice.uploadFile(idEstudiante,this.anteproyecto).subscribe();\n        \n\n      }\n    })\n  }\n\n\n\n  \n\n\n\n  onFileChange(e){\n    this.uploadedFiles = e.target.files;\n  }\n\n}\n","<div id=\"main-wrapper\">\n\n    <div class=\"container\">\n        <h1 id=\"titulo\">DOCUMENTO FINAL</h1>\n        <p id=\"titulo-proyecto\">TITULO:</p>\n        <a>\n            {{ info.modalidad.titulo_proyecto }}\n            </a>\n        <p id=\"Descripcion\">DESCRIPCIÓN:</p>\n        <a>\n            El documento debe tener los siguientes aspectos: Contenido, proponentes, titulo, area o linea de investigacion, antecedentes y justificacion, formulacion del problema , objetivos generales y especificos, alcance y limitaciones, metodologia, secuencia y actividades que se desarrollaran, cronograma, analisis y diseño , implementacion , resultados, conclusiones y recomendaciones ,recursos costos y fuentes de financiacion , Bibliografia basica, anexos.\n                </a>\n\n        <div id=\"btn_subir\" class=\"row text-xl-center\">\n            <div class=\"col-lg-6\">\n                <label for=\"imagen2\" *ngIf=\"nombreArchivo == null\" class=\"labels custom-file-upload\">\n                                    Click aquí para subir el Anteproyecto</label>\n\n                <label for=\"imagen2\" *ngIf=\"nombreArchivo != null\" class=\"labels custom-file-upload text-center\">{{ nombreArchivo }}</label><br>\n                <small>Recuerda que debe ser un archivo PDF, de tamaño menor a 25MB.</small><br>\n\n\n                <input name=\"imagen2\" id=\"imagen2\" (change)=\"getFile( $event.target.files[0] )\" type=\"file\" accept=\"application/pdf\" class=\"imagenes-secundarias\" /> <br> <br>\n\n                <button class=\"btn-btnSuccess\" (click)=\" enviarpdf()\" style=\"width: 50%; \"><b> Enviar\n                                        documento</b></button>\n\n            </div>\n\n\n\n        </div>\n\n\n\n\n    </div>\n    <div class=\"container-fluid\"></div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { LoginService, ProgramaService, ProyectoGradoService } from 'src/app/services/service.index';\nimport { Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport { Solicitud } from '../../../../models/solicitud';\ndeclare function init_plugins();\n@Component({\n  selector: 'app-formulario-inscripcion',\n  templateUrl: './formulario-inscripcion.component.html',\n  styleUrls: ['./formulario-inscripcion.component.css']\n})\nexport class FormularioInscripcionComponent implements OnInit {\n // Obtenemos toda la información del usuario\n info: any;\n tipoUsuario: string;\n programa: String;\n mostrardatos:Boolean;\n \n\n  constructor(\n    public _loginService: LoginService,\n    public _programaService: ProgramaService,\n    public router: Router,\n    public _solicitudService: ProyectoGradoService,\n\n  ) { }\n\n  ngOnInit(): void {\n    init_plugins();\n    this.getPrograma();\n    this.setInfo();\n\n  }\n  // Obtenemos el programa y lo pasamos a la variable Programa\n  getPrograma() {\n    this._programaService.getPrograma().subscribe((resp) => {\n      let infoPrograma = resp['programa'];\n      console.log(infoPrograma);\n      this.programa = infoPrograma.nombre;\n    });\n  }\n   // \"Ponemos\" el restod e información a las variables globales\n   setInfo() {\n    let estudiante = localStorage.getItem('estudiante');\n    let administrativo = localStorage.getItem('administrativo');\n\n    if (estudiante) {\n      this.tipoUsuario = 'estudiante';\n      this.info = JSON.parse(estudiante);\n    } else {\n      this.tipoUsuario = 'administrativo';\n      this.info = JSON.parse(administrativo);\n    }\n  }\n\n  postSolicitud(form: NgForm){\n    let idEstudiante = localStorage.getItem(\"id\")\n\n    Swal.fire({\n      title: '¿hacer solicitud ?',\n      text: `proceso de solicitud para proyecto de grado `,\n      icon: 'warning',\n      cancelButtonText: 'Cancelar',\n      confirmButtonText: 'Si',\n      //background: '#8F141B',\n\n      showCancelButton: true,\n      confirmButtonColor: '#60D89C',\n      cancelButtonColor: '#d33'\n\n    }).then((result) => {\n      if (result.value) {\n\n        let solicitud = new Solicitud(\n          form.value.nombreEst2,\n          form.value.codigoEst2,\n          form.value.identificacionEst2,\n          form.value.programaEst2,\n          form.value.correoEst2,\n          form.value.nombreEst3,\n          form.value.codigoEst3,\n          form.value.identificacionEst3,\n          form.value.programaEst3,\n          form.value.correoEst3,\n          form.value.tituloProyecto,\n          form.value.lineaInvestigacion,\n          form.value.directorProyecto,\n          form.value.problema,\n          form.value.alcance,\n          form.value.metodologia\n        )\n      this._solicitudService.postSolicitud(solicitud, idEstudiante).subscribe();\n\n\n      }\n    })\n\n  }\n  active():void{\n    this.mostrardatos=true;\n\n  }\n  inactive():void{\n    this.mostrardatos=false;\n\n  }\n\n\n // Función que direcciona cuando se da click en \"perfil\"\n irPerfil() {\n  this.router.navigate(['/perfil']);\n}\n\n}\n","<div id=\"main-wrapper\">\n    <!--navbar-->\n    <app-navbar></app-navbar>\n    <!--// sidebar  -->\n    <app-sidebar></app-sidebar>\n    <div class=\"page-wrapper\">\n\n        <br><br><br>\n        <h1 id=\"titulo\"> FORMULARIO DE INSCRIPCIÓN</h1>\n        <br><br>\n        <form ngNativeValidate #f=\"ngForm\" (ngSubmit)=\"postSolicitud(f)\" class=\"form-horizontal\" id=\"loginform\">\n            <!-- primera linea formulario-->\n            <!-- estudiante principal -->\n            <div id=\"datos\" class=\"form-group row\"><br>\n                <div id=\"datospersonales1\" class=\"form-group row\">\n                    <label>Nombre completo</label>\n                    <div class=\"col-sm\">\n                        <input id=\"staticnombre\" class=\"form-control form-control-sm\" type=\"text\" value=\"{{info.nombres}} {{ info.apellidos }}\" disabled>\n                    </div>\n\n                    <label id=\"codigo1\">Código</label>\n                    <div class=\"col-sm\">\n                        <input id=\"staticodigo\" class=\"form-control form-control-sm\" type=\"text\" value=\"{{info.codigo}}\" disabled>\n                    </div>\n\n\n                    <label>Identificación</label>\n                    <div class=\"col-sm\">\n                        <input id=\"identificacion\" class=\"form-control form-control-sm w-100\" type=\"text\" value=\"{{info.identificacion}}\" disabled>\n                    </div>\n                    <br>\n                </div>\n\n\n                <div id=\"datospersonales2\" class=\"form-group row\">\n                    <label>Programa académico</label>\n                    <div class=\"col-sm\">\n                        <input id=\"staticprograma\" class=\"form-control form-control-sm\" type=\"text\" value=\"{{ programa }}\" disabled>\n                    </div>\n\n                    <label id=\"correo\">Correo electrónico</label>\n                    <div class=\"col-sm\">\n                        <input id=\"staticcorreo\" class=\"form-control form-control-sm ml-1\" type=\"text\" value=\"{{ info.correo }}\" disabled>\n                    </div>\n\n                </div>\n            </div>\n            <!-- agregar intengrantes -->\n\n\n\n\n            <div id=\"Mostrar_integrante2\" class=\"form-group row\">\n\n                <h5 id=\"estudiante2\">estudiante 2</h5>\n                <div id=\"datospersonales1\" class=\"form-group row\">\n                    <label>Nombre completo</label>\n                    <div class=\"col-sm\">\n                        <input ngModel name=\"nombreEst2\" id=\"staticnombre\" class=\"form-control form-control-sm\" type=\"text\">\n                    </div>\n\n                    <label id=\"codigo1\">Código</label>\n                    <div class=\"col-sm\">\n                        <input ngModel name=\"codigoEst2\" id=\"staticodigo\" class=\"form-control form-control-sm\" type=\"text\">\n                    </div>\n\n\n                    <label>Identificación</label>\n                    <div class=\"col-sm\">\n                        <input ngModel name=\"identificacionEst2\" id=\"identificacion\" class=\"form-control form-control-sm w-100\" type=\"text\">\n                    </div>\n                    <br>\n                </div>\n\n\n                <div id=\"datospersonales2\" class=\"form-group row\">\n                    <label>Programa académico</label>\n                    <div class=\"col-sm\">\n                        <input ngModel name=\"programaEst2\" id=\"staticprograma\" class=\"form-control form-control-sm\" type=\"text\">\n                    </div>\n\n                    <label id=\"correo\">Correo electrónico</label>\n                    <div class=\"col-sm\">\n                        <input ngModel name=\"correoEst2\" id=\"staticcorreo\" class=\"form-control form-control-sm ml-1\" type=\"text\">\n                    </div>\n\n                </div>\n            </div>\n            <!-- estudiante 3 -->\n\n            <div id=\"Mostrar_integrante3\" class=\"form-group row\">\n                <h5 id=\"estudiante2\">estudiante 3</h5>\n                <div id=\"datospersonales1\" class=\"form-group row\">\n                    <label>Nombre completo</label>\n                    <div class=\"col-sm\">\n                        <input ngModel name=\"nombreEst3\" id=\"staticnombre\" class=\"form-control form-control-sm\" type=\"text\">\n                    </div>\n\n                    <label id=\"codigo1\">Código</label>\n                    <div class=\"col-sm\">\n                        <input ngModel name=\"codigoEst3\" id=\"staticodigo\" class=\"form-control form-control-sm\" type=\"text\">\n                    </div>\n\n\n                    <label>Identificación</label>\n                    <div class=\"col-sm\">\n                        <input ngModel name=\"identificacionEst3\" id=\"identificacion\" class=\"form-control form-control-sm w-100\" type=\"text\">\n                    </div>\n                    <br>\n                </div>\n\n\n                <div id=\"datospersonales2\" class=\"form-group row\">\n                    <label>Programa académico</label>\n                    <div class=\"col-sm\">\n                        <input ngModel name=\"programaEst3\" id=\"staticprograma\" class=\"form-control form-control-sm\" type=\"text\">\n                    </div>\n\n                    <label id=\"correo\">Correo electrónico</label>\n                    <div class=\"col-sm\">\n                        <input ngModel name=\"correoEst3\" id=\"staticcorreo\" class=\"form-control form-control-sm ml-1\" type=\"text\">\n                    </div>\n\n                </div>\n            </div>\n            <!--    -->\n\n            <br>\n            <!-- boton agregar  <div class=\"col v-center\">\n                <button id=\"btnenviar\" (click)=\"active()\" class=\"btn btn-danger d-block mx-auto\"> AGREGAR ESTUDIANTE <br>(maximo 2) </button>\n                <!--<button id=\"btnenviar\" (click)=\"inactive()\">ocultar</button>-->\n            -->\n\n\n\n\n\n\n            <!-- segunda linea formulario-->\n\n            <!-- tercera linea linea formulario-->\n\n            <!-- linea separadora -->\n            <hr>\n            <!-- cuarta linea formulario-->\n            <div id=\"datosproyecto\" class=\"form-group row \"><br>\n                <div class=\"form-group col-md-2\"><label>TITULO DEL PROYECTO</label>\n                </div>\n                <div class=\"form-group col-md-10\">\n                    <input ngModel name=\"tituloProyecto\" type=\"text\" class=\"form-control\" id=\"tituloProyecto\" placeholder=\"título del proyecto\" required></div>\n\n            </div>\n            <!-- quinta linea formulario-->\n            <div id=\"datosproyecto\" class=\" form-row \">\n                <div class=\"form-group col-md-2\"><label>LINEA DE INVESTIGACIÓN</label>\n                </div>\n                <div class=\"form-group col-md-10 \">\n                    <select ngModel name=\"lineaInvestigacion\" id=\"inputState \" class=\"form-control \" required>\n                    <option value=\"INGENIERÍA DE SOFTWARE\"selected>INGENIERÍA DE SOFTWARE</option>\n                    <option>INTERNET DE LAS COSAS </option>\n                    <option>INTELIGENCIA ARTIFICIAL</option>\n                  </select></div>\n\n            </div>\n            <!-- sexta linea formulario-->\n            <div id=\"datosproyecto\" class=\" form-row \">\n                <div class=\"form-group col-md-2\"><label>SOLICITUD DIRECTOR DE PROYECTO</label>\n                </div>\n                <div class=\"form-group col-md-10 \">\n                    <select ngModel name=\"directorProyecto\" id=\"inputState\" class=\"form-control \" required>\n                    <option value=\"JHON JAIRO TRUJILLO\" selected>JHON JAIRO TRUJILLO</option>\n                    <option>FERNANDO ROJAS</option>\n                    <option>EURIPIDES TRIANA</option>\n                    <option>JUAN CASTRO</option>\n                    \n                  </select></div>\n\n            </div>\n\n            <!-- segunda linea separadora -->\n            <hr>\n            <!-- septima linea formulario-->\n            <div class=\"align-self-center text-center m-5\">\n                <div class=\"m-5\">\n                    <label for=\"formGroupExampleInput \">FORMULACION DEL PROBLEMA</label>\n                    <textarea ngModel name=\"problema\" class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" placeholder=\"ESCRIBE UNA BREVE INTRODUCCION SOBRE LA FORMULACIÓN DEL PROBLEMA\" required></textarea>\n                </div>\n                <!-- octava linea formulario-->\n                <div class=\"m-5\">\n                    <label for=\"formGroupExampleInput2 \">ALCANCE Y LIMITACIONES</label>\n                    <textarea ngModel name=\"alcance\" class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" placeholder=\"ESCRIBE UNA BREVE INTRODUCCION SOBRE EL ALCANCE Y LIMITACIONES\" required></textarea>\n                </div>\n                <!-- novena linea formulario-->\n                <div class=\"m-5\">\n                    <label for=\"formGroupExampleInput2 \">METODOLOGIA</label>\n                    <textarea ngModel name=\"metodologia\" class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" placeholder=\"ESCRIBE UNA BREVE INTRODUCCION SOBRE LA METODOLOGÓIA DEL PROBLEMA\" required></textarea>\n                </div>\n            </div>\n            <!-- boton enviar formulario-->\n            <div class=\"col v-center\">\n                <button id=\"btnenviar\" class=\"btn btn-danger d-block mx-auto\"> ENVIAR </button>\n            </div>\n        </form>\n\n\n        <!-- ------------------------------------------------>\n\n\n\n        <br><br><br><br><br><br><br><br>\n        <br><br><br><br><br><br><br><br>\n        <!-- footer -->\n        <footer class=\"footer\">\n            <article class=\"centro txtcenter\">\n                <figure class=\"figure\"><img src=\"https://www.usco.edu.co/imagen-institucional/logo/universidad-surcolombiana.png\" alt=\"Universidad Surcolombian\" title=\"Universidad Surcolombian\"></figure>\n                <p><strong>Institución de Educación Superior sujeta a inspección y vigilancia del Ministerio de Educación Nacional</strong></p>\n                <p>NIT: 891180084-2<br> Horario de atención al público:<br> Lunes a viernes de 8:00 a.m. a 12:00 m. y de 2:00 p.m. a 6:00 p.m.<br> Línea Gratuita Nacional: 018000 968722<br>\n                    <a>Notificaciones Judiciales</a>: notificacionesjudiciales@usco.edu.co</p>\n            </article>\n\n        </footer>\n\n\n    </div>\n    <div class=\"container-fluid\">\n\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport Swal from 'sweetalert2';\nimport { SubirArchivoService } from '../../../../services/proyectoGrado/subir-archivo.service';\n\n\n@Component({\n  selector: 'app-proyecto',\n  templateUrl: './proyecto.component.html',\n  styleUrls: ['./proyecto.component.css']\n})\nexport class ProyectoComponent implements OnInit {\n  uploadedFiles: Array<File>;\n  info:any;\n  nombreArchivo: string;\n  MAX_SIZE_FILE: number = 25000000;\n  anteproyecto = new FormData();\n\n  constructor(private subirArchivoservice: SubirArchivoService) { }\n\n  ngOnInit(): void {\n    // Obtenemos la información del estudiante y se la pasamos a la variable info\n    const estudiante = JSON.parse(localStorage.getItem('estudiante'));\n    this.info = estudiante;\n   \n    \n  }\n  getFile(file: File) {\n    \n    if (file.size > this.MAX_SIZE_FILE) {\n\n      Swal.fire({\n  \n        title: 'Lo Sentimos',\n        html: `<p><b>${file.name}</b>, supera las 25 MB</p>`,\n        icon: 'error',\n        confirmButtonText: 'Ok',\n        showCancelButton: false,\n        confirmButtonColor: '#60D89C',\n  \n      }).then(() => {\n        location.reload()\n      });\n    }else {\n      this.nombreArchivo = file.name;\n      let anteproyecto = <File>file;\n      this.anteproyecto.append('anteproyecto',anteproyecto,anteproyecto.name);\n\n    }\n    \n  }\n  \n  enviarpdf(){\n    Swal.fire({\n      title:`¿Seguro de subir este archivo? `,\n      text:  this.nombreArchivo,\n      icon: 'warning',\n      cancelButtonText: 'NO',\n      confirmButtonText: 'SI',\n\n      showCancelButton: true,\n      confirmButtonColor: '#60D89C',\n      cancelButtonColor: '#d33',\n      \n\n    }).then((result) => {\n      if (result.value) {\n        let idEstudiante = JSON.parse(localStorage.getItem('estudiante'))._id;\n\n          // call service\n        this.subirArchivoservice.uploadFile(idEstudiante,this.anteproyecto).subscribe();\n        \n\n      }\n    })\n  }\n\n\n\n  \n\n\n\n  onFileChange(e){\n    this.uploadedFiles = e.target.files;\n  }\n\n}\n","<div id=\"main-wrapper\">\n    <div class=\"container\">\n        <h1 id=\"titulo\">PROYECTO</h1>\n        <p id=\"titulo-proyecto\">TITULO:</p>\n        <a>\n            {{ info.modalidad.titulo_proyecto }}\n            </a>\n        <p id=\"Descripcion\">DESCRIPCIÓN:</p>\n        <div id=\"descripcion\">\n            <a>\n                El documento debe tener los siguientes aspectos:<br> Contenido<br>\n                 proponentes<br>titulo<br> area o linea de investigacion<br>\n                 antecedentes y justificacion<br>  formulacion del problema <br> \n                 objetivos generales y especificos<br>\n                 alcance y limitaciones<br> metodologia<br> secuencia y actividades que se desarrollaran<br> \n                 cronograma<br> recursos costos y fuentes de financiacion <br> Bibliografia basica.\n                 <br>\n                    </a>\n        </div>\n\n\n\n        <div id=\"btn_subir\" class=\"row text-xl-center\">\n            <div class=\"col-lg-6\">\n                <label for=\"imagen2\" *ngIf=\"nombreArchivo == null\" class=\"labels custom-file-upload\">\n                                    Click aquí para subir el Anteproyecto</label>\n\n                <label for=\"imagen2\" *ngIf=\"nombreArchivo != null\" class=\"labels custom-file-upload text-center\">{{ nombreArchivo }}</label><br>\n                <small>Recuerda que debe ser un archivo PDF, de tamaño menor a 25MB.</small><br>\n\n\n                <input name=\"imagen2\" id=\"imagen2\" (change)=\"getFile( $event.target.files[0] )\" type=\"file\" accept=\"application/pdf\" class=\"imagenes-secundarias\" /> <br> <br>\n\n                <button class=\"btn-btnSuccess\" (click)=\" enviarpdf()\" style=\"width: 50%; \"><b> Enviar\n                                        documento</b></button>\n\n            </div>\n\n\n\n        </div>\n\n\n        <div class=\"container-fluid\"></div>\n\n\n\n    </div>","import { Component, OnInit } from '@angular/core';\nimport { ProyectoGradoService } from '../../../../services/proyectoGrado/proyecto-grado.service';\nimport { DocumentService } from '../../../../services/document/document.service';\n\n\ndeclare function init_plugins();\n\n\n@Component({\n  selector: 'app-seguimiento-modalidad',\n  templateUrl: './seguimiento-modalidad.component.html',\n  styleUrls: ['./seguimiento-modalidad.component.css']\n})\n\nexport class SeguimientoModalidadComponent implements OnInit {\n  info: any; // Almacenará la info del estudiante (en JSON)\n\n  constructor(\n    public proyectoGradoService: ProyectoGradoService,\n    public _documentService: DocumentService,\n    \n  ) { }\n\n  ngOnInit(): void {\n    \n    init_plugins();\n    /*this.getFormulario();\n    \n\n  }\n  // Obtenemos el programa y lo pasamos a la variable Programa\n  /*getFormulario() {\n   // this._documentService.getFormulario().subscribe((resp) => {\n      let infoDocument = resp['document'];\n      console.log(infoDocument);\n      this.document = infoDocument.titulo_proyecto;\n    });*/\n\n\n  // Obtenemos la información del estudiante y se la pasamos a la variable info\n    const estudiante = JSON.parse(localStorage.getItem('estudiante'));\n    this.info = estudiante;\n\n  \n  \n}\n}\n","<div id=\"main-wrapper\">\n\n\n    <div id=\"container\" class=\"container\">\n\n        <p id=\"titulo\"> PROYECTO DE GRADO</p>\n        <br>\n        <div class=\"card\">\n            <div id=\"tutulo-tutor\" class=\"container text-center  d-flex justify-content-center\">\n                <label>Titulo del proyecto:</label>\n                <div class=\"d-flex\">\n\n                    <input id=\"static\" class=\" sinborde\" type=\"text\" value=\" &nbsp;  {{ info.modalidad.titulo_proyecto }}\" disabled>\n                </div>\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                <label>Tutor Asignado:</label>\n                <div class=\"d-flex\">\n                    <input id=\"static\" class=\"sinborde\" type=\"text\" value=\"&nbsp; {{info.modalidad.director_proyecto}}\" disabled>\n                </div>\n            </div>\n\n            <div id=\"descripcion\" class=\"card w-75\">\n                <div class=\"card-body\">\n\n                    <div class=\"row p-t-20\" style=\"padding-left: 15px;\" te>\n                        <div class=\"col-lg-12\">\n                            <div class=\"form-group\">\n                                <label for=\"exampleInputuname\">nombre de integrantes</label>\n                                <div class=\"input-group\">\n                                    <div class=\"input-group-addon\"><i class=\"fa fa-user\"></i></div>\n                                    <input type=\"text\" class=\"form-control\" id=\"exampleInputuname\" value=\"{{info.nombres}}  {{info.apellidos}} \" disabled>\n                                </div>\n\n                                <div class=\"input-group\">\n                                    <div class=\"input-group-addon\"><i class=\"fa fa-user\"></i></div>\n                                    <input type=\"text\" class=\"form-control\" id=\"exampleInputuname\" value=\"{{info.modalidad.nombreEst2}}\" disabled>\n                                </div>\n                                <div class=\"input-group\">\n                                    <div class=\"input-group-addon\"><i class=\"fa fa-user\"></i></div>\n                                    <input type=\"text\" class=\"form-control\" id=\"exampleInputuname\" value=\"{{info.modalidad.nombreEst3}}\" disabled>\n                                </div>\n\n\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"row p-t-0\" style=\"padding-left: 15px;\" te>\n                        <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                                <label for=\"exampleInputuname\">linea de investigación</label>\n                                <div class=\"input-group\">\n                                    <div class=\"input-group-addon\"><img id=\"icon\" src=\"assets/svg/science.svg\"></div>\n                                    <input type=\"text\" class=\"form-control\" id=\"exampleInputuname\" value=\"{{info.modalidad.linea_investigacion}}\">\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                                <label for=\"exampleInputuname\">fecha de aprobación de inscripción</label>\n                                <div class=\"input-group\">\n                                    <div class=\"input-group-addon\"><img id=\"icon\" src=\"assets/svg/calendar.svg\"></div>\n                                    <input type=\"text\" class=\"form-control\" id=\"exampleInputuname\" value=\"{{info.modalidad.fecha}}\">\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n                <p id=\"titulo\"> SEGUIMIENTO </p>\n            </div>\n\n            <hr/>\n\n\n            <table class=\"width200\">\n\n                <thead>\n                    <tr>\n                        <th>Fase</th>\n                        <th>Estado</th>\n                        <th>Fecha</th>\n                        <th>Aprobado por</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td id=\"fase\">Formulario Inscripción</td>\n                        <td>{{info.modalidad.estado}}</td>\n                        <td>{{info.modalidad.fecha}}</td>\n                        <td>{{info.modalidad.director_proyecto}}</td>\n\n                    </tr>\n                    <tr>\n                        <td id=\"fase\">Anteproyecto</td>\n                        <td>{{info.modalidad.estado_anteproyecto}}</td>\n                        <td>{{info.modalidad.fechaAnte}}</td>\n                        <td>{{info.modalidad.director_proyectoAnte}}</td>\n\n                    </tr>\n                    <tr>\n                        <td id=\"fase\">Proyecto</td>\n                        <td>{{info.modalidad.estadoProy}}</td>\n                        <td>{{info.modalidad.fechaProy}}</td>\n                        <td>{{info.modalidad.director_proyectoProy}}</td>\n\n                    </tr>\n                    <tr>\n                        <td id=\"fase\">Documento final</td>\n                        <td>{{info.modalidad.estadoDoc}}</td>\n                        <td>{{info.modalidad.fechaDoc}}</td>\n                        <td>{{info.modalidad.director_proyectoDoc}}</td>\n\n                    </tr>\n\n                </tbody>\n            </table>\n\n            <br>\n        </div>\n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport Swal from 'sweetalert2';\nimport { SubirArchivoService } from '../../../../services/proyectoGrado/subir-archivo.service';\n\n\n@Component({\n  selector: 'app-sustentacion',\n  templateUrl: './sustentacion.component.html',\n  styleUrls: ['./sustentacion.component.css']\n})\nexport class SustentacionComponent implements OnInit {\n  uploadedFiles: Array<File>;\n  info:any;\n  nombreArchivo: string;\n  MAX_SIZE_FILE: number = 25000000;\n  anteproyecto = new FormData();\n\n  constructor(private subirArchivoservice: SubirArchivoService) { }\n\n  ngOnInit(): void {\n    // Obtenemos la información del estudiante y se la pasamos a la variable info\n    const estudiante = JSON.parse(localStorage.getItem('estudiante'));\n    this.info = estudiante;\n   \n    \n  }\n  getFile(file: File) {\n    \n    if (file.size > this.MAX_SIZE_FILE) {\n\n      Swal.fire({\n  \n        title: 'Lo Sentimos',\n        html: `<p><b>${file.name}</b>, supera las 25 MB</p>`,\n        icon: 'error',\n        confirmButtonText: 'Ok',\n        showCancelButton: false,\n        confirmButtonColor: '#60D89C',\n  \n      }).then(() => {\n        location.reload()\n      });\n    }else {\n      this.nombreArchivo = file.name;\n      let anteproyecto = <File>file;\n      this.anteproyecto.append('anteproyecto',anteproyecto,anteproyecto.name);\n\n    }\n    \n  }\n  \n  enviarpdf(){\n    Swal.fire({\n      title:`¿Seguro de subir este archivo? `,\n      text:  this.nombreArchivo,\n      icon: 'warning',\n      cancelButtonText: 'NO',\n      confirmButtonText: 'SI',\n\n      showCancelButton: true,\n      confirmButtonColor: '#60D89C',\n      cancelButtonColor: '#d33',\n      \n\n    }).then((result) => {\n      if (result.value) {\n        let idEstudiante = JSON.parse(localStorage.getItem('estudiante'))._id;\n\n          // call service\n        this.subirArchivoservice.uploadFile(idEstudiante,this.anteproyecto).subscribe();\n        \n\n      }\n    })\n  }\n\n\n\n  \n\n\n\n  onFileChange(e){\n    this.uploadedFiles = e.target.files;\n  }\n\n}\n","<div id=\"main-wrapper\">\n    <div class=\"container\">\n        <h1 id=\"titulo\">SUSTENTACIÓN</h1>\n        <p id=\"sustInfo\">A continuación encontrara la información detallada de la sustentación de su proyecto de grado:</p>\n\n        <div id=\"descripcion\">\n            <a>\n                <img src=\"assets/svg/calendar-b.svg\"> Fecha :<br>\n                <img src=\"assets/svg/clock-b.svg\"> Hora :<br>\n                <img src=\"assets/svg/ubicacion-b.svg\"> Lugar : <br>\n                <img src=\"assets/svg/jurado-b.svg\"> Jurado asignado :<br>\n            </a>\n            <div id=\"jurados\">\n                <a>\n                    <img src=\"assets/svg/fiber-b.svg\"> jurado 1<br>\n                    <img src=\"assets/svg/fiber-b.svg\"> jurado 2<br>\n                    <img src=\"assets/svg/fiber-b.svg\"> jurado 3<br>\n                </a>\n\n            </div>\n\n        </div>\n\n\n\n\n        <div class=\"container-fluid\"></div>\n\n\n\n    </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-semillero',\n  templateUrl: './semillero.component.html',\n  styleUrls: ['./semillero.component.css']\n})\nexport class SemilleroComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>semillero works!</p>\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { URL_SERVICES } from '../config/config';\n\n@Pipe({\n  name: 'imagen',\n})\nexport class ImagenPipe implements PipeTransform {\n  // Función para obtener la imagen de los usuarios\n\n  transform(img: string, tipoUsuario: string): any {\n    // Accedemos a la ruta de la imagen\n    let url = URL_SERVICES + '/imagen';\n\n    // Si no existe la imagen...\n    if (!img) {\n      return url + '/estudiante/NotFound';\n    }\n\n    // Switch para validar el tipo de usuario, y acceder a la url específica\n    switch (tipoUsuario) {\n      case 'estudiante':\n        url += '/estudiantes/' + img;\n        break;\n\n      case 'administrativo':\n        url += '/administrativos/' + img;\n        break;\n    }\n\n    return url;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ImagenPipe } from './imagen.pipe';\n\n// Lo importamos donde se van a a utilizar (PagesModule y SharedModule)\n\n@NgModule({\n  declarations: [\n    ImagenPipe\n  ],\n  imports: [],\n  exports:[\n    ImagenPipe\n  ]\n})\nexport class PipesModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { URL_SERVICES } from 'src/app/config/config';\nimport { Router } from '@angular/router';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DocumentService {\n   // Alamacenaremos la info del usuario\n  formulario: any;\n\n  constructor(public http: HttpClient) {}\n\n  // Función para obtener el programa que corresponde el estudiante\n  getFormulario() {\n    // Si es estudiante...\n    if (localStorage.getItem('estudiante')) {\n      this.formulario = JSON.parse(localStorage.getItem('estudiante'));\n    } else {\n      this.formulario = JSON.parse(localStorage.getItem('administrativo'));\n    }\n\n    // Obtenemos el id del programa que corresponde al usuario\n    let idModalidad = this.formulario.proyectogrado._id;\n\n    // Se obtiene del backend\n    let url = URL_SERVICES + '/formulario/' + idModalidad;\n    return this.http.get(url);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { LoginService } from 'src/app/services/login/login.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginGuardGuard implements CanActivate {\n\n  constructor ( public router: Router, public _loginService: LoginService) {}\n\n  // Lo ponemos en el path que queremos proteger\n  // En este caso requisitos(app.routes) y panel-principal(pages.routes)\n  canActivate() {\n\n    // Si está logueado, retorne true (lo deja pasar)\n    if ( this._loginService.logueado()){\n      return true;\n    } else {\n      // Si no, lo devuelve al login\n      this.router.navigate(['/login']);\n      return false;\n    }\n\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { Usuario } from '../../models/usuario.model';\nimport { HttpClient } from '@angular/common/http'\nimport { URL_SERVICES } from '../../config/config';\nimport  { catchError, map } from 'rxjs/operators';\n\nimport { throwError } from 'rxjs';\nimport Swal from 'sweetalert2';\nimport { Router } from '@angular/router';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  // Definimos una variable global \"token\" para después asignarle un valor\n  token: string;\n\n  constructor( public router: Router, public http: HttpClient ) {\n   }\n\n  // Esta función nos va a servir para cuando el estudiante está en la página de requisitos\n  // y si intenta entrar al panel principal, no lo deje. Ya que la ruta va a estar protegida\n  // por el loginGuard que confirma si está el token en el local storage --> Al hacer click\n  // En el botón continuar, se llama esta finción y se guarda el token en el local storage\n  dejaPasarModalidades(){\n    localStorage.setItem('token', this.token);\n  }\n\n\n  // Devuelve una bandera (true/false) confirmando si el usuario está logueado (tiene el token\n  // en el local storage)\n  logueado(){\n    this.token = localStorage.getItem(\"token\");\n    return ( this.token )? true: false;\n  }\n\n  // Redirije a la pagina del login\n  logOut(){\n    this.router.navigate(['/login']);\n  }\n\n  // En esta función se llama al servicio del login del backend\n  // Recibe un usuario de tipo Usuario (Modelo), y una bandera que nos indica que el check de\n  // recordarme está activado\n\n  login( usuario: Usuario, recordar: boolean = false){\n\n    // Definimos la url del servicio que queremos llamar\n    let url = URL_SERVICES + '/login';\n\n    // Enviamos los datos. Es un observable, entonces tendrá una respuesta\n    return this.http.post(url, usuario)\n    .pipe(map( (resp:any) => {\n\n      if (resp['estudiante']){\n\n        // Si el check está activado, se guarda el usuario en el localStorage\n        if (recordar === true) {\n          localStorage.setItem('usuario', resp.estudiante.usuario);\n        } else {\n          localStorage.removeItem('usuario')\n        }\n\n        // Guardamos toda la info del estudiante y el id\n        localStorage.setItem('estudiante', JSON.stringify(resp.estudiante));\n        localStorage.setItem('id', resp.estudiante._id);\n\n        // Se le asigna el token de la respuesta a la variable token\n        this.token = resp.token;\n\n\n\n        // Es el mismo procedimiento anterior(Administrativo)\n      } else {\n\n        // Si el check está activado, se guarda el usuario en el localStorage\n        if (recordar === true) {\n          localStorage.setItem('usuario', resp.administrativo.usuario);\n        } else {\n          localStorage.removeItem('usuario');\n        }\n\n        // Se guarde la info del administrativo, el id y el token al local sotrage\n        // NOTA: Como nos podemos dar cuenta, aquí no se asigna el token del admin a la variable\n        // token, esto debido a que el administrativo no va a pasar por la página de requisitos\n        // y necesita el token a penas se loguee en el local storae\n        localStorage.setItem('administrativo', JSON.stringify(resp.administrativo));\n        localStorage.setItem('id', resp.administrativo._id);\n        localStorage.setItem('token', resp.token);\n\n      }\n\n      return true;\n  }),\n      // Si existen errores (status code de la petición), los capturamos y los ponemos en un\n      // sweetalert\n      catchError((err) => {\n\n      Swal.fire({\n        title:'¡Error!',\n        text: err.error.mensaje,\n        icon:'error',\n        confirmButtonColor: '#8F141B'\n      });\n\n      return throwError(err);\n\n  }));\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { URL_SERVICES } from '../../config/config';\nimport { ProgramaService } from '../programa/programa.service';\n//import { Modalidad } from 'src/app/models/modalidad.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ModalidadService {\n  // Variable que almacenará el porcentaje de créditos aprobados por el estudiante\n  porcentaje: any;\n\n  // Inyectamos el módulo de Http y el servicio del programa\n  constructor(\n    public http: HttpClient,\n    public _programaService: ProgramaService\n  ) {}\n\n  // Calculamos el porcentaje y se lo pasamos a la variable global\n  calcularPorcentaje() {\n    this._programaService.getPrograma().subscribe((resp: any) => {\n      let infoEstudiante = JSON.parse(localStorage.getItem('estudiante'));\n      let credAprob = infoEstudiante.creditos_aprobados;\n\n      let programa = resp.programa;\n      let creditosTotales = programa.creditos_totales;\n\n      let porcent = (credAprob * 100) / creditosTotales;\n\n      this.porcentaje = porcent.toFixed(1);\n\n      return this.porcentaje;\n    });\n  }\n\n  // Función para habilitar el botón de seleccionar modalidad, recibe el array de los botones y las cardheader\n  seleccionarModalidad(btnSelec: any[], cardHeader: any[]) {\n    // Recibimos las modalidades y se crea un array de las modalidades\n    this.getModalidades().subscribe((resp: any) => {\n      let modalidades: any[] = resp.modalidades;\n\n      // Se recorren las modalidades\n      for (let [i, modalidad] of modalidades.entries()) {\n        // Obtenemos los nombres y porcentaje de cada modalidad\n        let nombre = modalidad.nombre.toUpperCase();\n        let porcentajeMod = modalidad.porcentaje_creditos * 100;\n\n        // Recorremos el array de los cardHeader\n        for (let card of cardHeader) {\n          // Obtenemos el título de la card\n          let titulo = card.innerText;\n\n          // Si el titulo de la card coincide con el nombre de la modalidad\n          if (titulo == nombre) {\n            // Si el porcentaje del estudiante es mayor al porcentaje de la modaidad\n            if (this.porcentaje > porcentajeMod) {\n              // Activa el el botón el la card correspondiente\n              btnSelec[i].disabled = false;\n            }\n          }\n        }\n      }\n    });\n  }\n\n  // Obtenemos las modalidades del backend\n  getModalidades() {\n    let token = localStorage.getItem('token');\n    let url = URL_SERVICES + '/modalidades?token=' + token;\n    return this.http.get(url);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { URL_SERVICES } from '../../config/config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProgramaService {\n  // Alamacenaremos la info del usuario\n  usuario: any;\n\n  constructor(public http: HttpClient) {}\n\n  // Función para obtener el programa que corresponde el estudiante\n  getPrograma() {\n    // Si es estudiante...\n    if (localStorage.getItem('estudiante')) {\n      this.usuario = JSON.parse(localStorage.getItem('estudiante'));\n    } else {\n      this.usuario = JSON.parse(localStorage.getItem('administrativo'));\n    }\n\n    // Obtenemos el id del programa que corresponde al usuario\n    let idPrograma = this.usuario.programa._id;\n\n    // Se obtiene del backend\n    let url = URL_SERVICES + '/programa/' + idPrograma;\n    return this.http.get(url);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Solicitud } from '../../models/solicitud';\nimport { URL_SERVICES } from 'src/app/config/config';\nimport { map } from 'rxjs/internal/operators/map';\nimport Swal from 'sweetalert2';\nimport { catchError } from 'rxjs/internal/operators/catchError';\nimport { throwError } from 'rxjs/internal/observable/throwError';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProyectoGradoService {\n\n  constructor(public http:HttpClient, public router: Router) { }\n  \n  postSolicitud(solicitud:Solicitud,\n    id_Estudiante:string){\n      \n      let token =localStorage.getItem(\"token\")\n\n      let url =`${URL_SERVICES}/proyectogrado/${id_Estudiante}?token=${token}`; \n\n\n      return this.http.post(url, solicitud).pipe(map((resp: any) => {\n\n        if (resp.ok == true) {\n  \n          Swal.fire({\n            title: '¡Bien Hecho!',\n            text:'espera a que acepten tu solicitud',\n            html: `Su solicitud fue exitosa, el radicado de su solicitud es: <b> ${resp.solicitudGuardada._id}</b>. <br> <center> Por favor vuelva a Iniciar Sesión </center>`,\n            icon: 'success'\n          }).then(() => {\n            this.router.navigate(['/login'])\n          });\n        }\n  \n        return true;\n  \n      }), catchError((err) => {\n  \n        Swal.fire({\n          title: '¡Error!',\n          text: err.error.mensaje,\n          icon: 'error',\n        });\n  \n        return throwError(err);\n  \n      }));\n\n    }\n    getSolicitud(solicitud:Solicitud,\n      id_Estudiante:string){\n        \n        let token =localStorage.getItem(\"token\")\n  \n        let url =`${URL_SERVICES}/proyectogrado/${id_Estudiante}?token=${token}`; \n  \n  \n        return this.http.post(url, solicitud).pipe(map((resp: any) => {\n  \n          if (resp.ok == true) {\n    \n            Swal.fire({\n              title: '¡integrante agredado correctamente!',\n              text:'',\n              html: `Su solicitud fue exitosa, el radicado de su solicitud es: <b> ${resp.solicitudGuardada._id}</b>. <br> <center> Por favor vuelva a Iniciar Sesión </center>`,\n              icon: 'success'\n            }).then(() => {\n              this.router.navigate(['/login'])\n            });\n          }\n    \n          return true;\n    \n        }), catchError((err) => {\n    \n          Swal.fire({\n            title: '¡No se pudo agregar el integrante!',\n            text: err.error.mensaje,\n            icon: 'error',\n            \n          });\n    \n          return throwError(err);\n    \n        }));\n  \n      }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Router, Routes } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport Swal from 'sweetalert2';\nimport { map } from 'rxjs/internal/operators/map';\nimport { catchError } from 'rxjs/internal/operators/catchError';\nimport { throwError } from 'rxjs/internal/observable/throwError';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SubirArchivoService {\n  \n  constructor( private http:HttpClient,private router:Router){}\n\n  uploadFile(idEstudiante:string,anteproyecto:FormData){\n    let token = localStorage.getItem('token')\n    let urlApi = `http://localhost:3000/uploadFile/${idEstudiante}?token=${token}`;\n    return this.http.put(urlApi,anteproyecto).pipe(map((resp: any) => {\n\n      if (resp.ok == true) {\n\n        Swal.fire({\n          title: '¡Bien Hecho!',\n          text: `Se ha enviado correctamente el documento`,\n          icon: 'success'\n        }).then(() => {\n          this.router.navigate(['/mi-modalidad'])\n        });\n      }\n      return true;\n    }), catchError((err) => {\n\n      Swal.fire({\n        title: '¡Error!',\n        text: err.error.mensaje,\n        icon: 'error',\n      });\n\n      return throwError(err);\n    }));\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Programa } from '../../models/programa.model';\nimport { ProgramaService } from '../programa/programa.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RequisitosService {\n\n  // Definimos las variables que vamos a utilizar\n  estudiante: String;\n  creditosAprob: any;\n  modGrado: Number;\n\n  programa: Programa;\n\n  bien: String = 'fa-check'\n  mal: String = 'fa-times'\n\n  constructor( public _programaService: ProgramaService ) { }\n\n  // Creamos una función que calcula el 50% de los cŕeditos totales de la carrera\n  calculoPorcentaje( creditos:any ){\n    return creditos * 0.5;\n  }\n\n\n  // Hacemos la función que se encarga de confirmar los requisitos para cada uno de los programas\n  confirmarRequisitos( btnContinuar:any, icon:any ){\n    \n    // Obtenemos la info de cada programa del estudiante\n    this._programaService.getPrograma().subscribe( (resp:any) => {\n      \n      this.programa = resp.programa;\n\n      // Tomamos del localStorage y lo separamos en variables\n      this.estudiante = JSON.parse(localStorage.getItem('estudiante'));\n      this.creditosAprob = this.estudiante['creditos_aprobados'];\n      this.modGrado = this.estudiante['modGrado'];\n    \n      // Seleccionamos el elemento html que necesitamos\n      btnContinuar = btnContinuar[1];\n      \n      let iconCred = icon[0];\n      let iconMod = icon[1];\n      \n      // Se calcula el 50% de los créditos de cada programa\n      let porcentaje = this.calculoPorcentaje(this.programa.creditos_totales);\n    \n    \n      //Si supera ese 50%...\n      if (this.creditosAprob > porcentaje){\n        // Indicamos qué icono se quiere (check)\n        iconCred.classList.add(this.bien);\n        // Se le asigna un id, para que el archivo css le cambie el estilo(verde)\n        iconCred.setAttribute('id', \"icon-check\")\n      \n      // Si no supera...\n      } else {\n        // Indicamos qué icono se quiere (X)\n        iconCred.classList.add(this.mal);\n        // Se le asigna un id, para que el archivo css le cambie el estilo(rojo)\n        iconCred.setAttribute('id', \"icon-mal\");  \n      }\n    \n    \n      // Se repite el procedimiento anterior, pero en este caso con la modGrado\n      if (this.modGrado > 3) {\n        iconMod.classList.add(this.bien);\n        iconMod.setAttribute('id', \"icon-check\")\n      } else {\n        iconMod.classList.add(this.mal);\n        iconMod.setAttribute('id', \"icon-mal\");  \n      }\n    \n    \n      // Si cumple ambos requisitos...\n      if (this.modGrado > 3 && this.creditosAprob > porcentaje){\n        // Habilita el botón para dejarlo continuar\n        btnContinuar.disabled = false;  \n      }\n    \n      });\n  \n  }\n\n}\n\n\n","export { ProyectoGradoService } from './proyectoGrado/proyecto-grado.service';\nexport { ModalidadService } from './modalidad/modalidad.service';\n\nexport { ProgramaService } from './programa/programa.service';\nexport { LoginGuardGuard } from './guards/login-guard.guard';\nexport { RequisitosService } from './requisitos/requisitos.service';\nexport { LoginService } from './login/login.service';\nexport { SidebarService } from './sidebar/sidebar.service';\nexport { SharedService } from './shared/shared.service';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport {\n  SharedService,\n  LoginService,\n  SidebarService,\n  RequisitosService,\n  LoginGuardGuard,\n  ProgramaService,\n  ModalidadService,\n  ProyectoGradoService\n\n\n} from './service.index'\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    HttpClientModule    \n  ], providers: [\n    LoginService,\n    SharedService,\n    SidebarService,\n    RequisitosService,\n    LoginGuardGuard,\n    ProgramaService,\n    ModalidadService,\n    ProyectoGradoService\n  ]\n})\nexport class ServiceModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedService {\n\n  constructor() { }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SidebarService {\n  /*\n  menu: any[] = [\n    {\n      titulo: 'Formulario Inscripción ',\n      icono: 'assets/svg/find_in_page.svg',\n      url: '/solicitud-proyecto-de-grado'\n      \n    },\n   // {\n   //   titulo: 'Fase de modalidad',\n   //   submenu: [\n   //     {icono: 'assets/svg/sync-b.svg',titulo:'Anteproyecto', url: '/anteproyecto'},\n   //     {icono: 'assets/svg/sync-b.svg',titulo:'Anteproyecto', url: '/proyecto'},\n   //     {icono: 'assets/svg/sync-b.svg',titulo:'Anteproyecto', url: '/Documento Final'}\n   //   ]\n     \n      \n    //},\n    {\n      titulo: 'Seguimiento modalidad ',\n      icono: 'assets/svg/find_in_page.svg',\n      url: '/seguimiento-proyecto-de-grado'\n      \n    }\n  ]\n*/\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivationEnd } from '@angular/router';\nimport { Title, Meta, MetaDefinition } from '@angular/platform-browser';\nimport { filter, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-breadcrumbs',\n  templateUrl: './breadcrumbs.component.html',\n  styles: [],\n})\nexport class BreadcrumbsComponent implements OnInit {\n  titulo: string;\n\n  constructor(\n    private router: Router,\n    private title: Title,\n    private meta: Meta\n  ) {\n    // Nos subscribimos al observable y le asignamos el titulo a la variable global\n    this.getDataRoutes().subscribe((data) => {\n      this.titulo = data.titulo;\n      this.title.setTitle('BPUS - ' + this.titulo);\n\n      const metaTag: MetaDefinition = {\n        name: 'description',\n        content: this.titulo,\n      };\n\n      this.meta.updateTag(metaTag);\n    });\n  }\n\n  ngOnInit(): void {}\n\n  // Obtenemos la información de las rutas definiada en \"pages.routes.ts\"\n  getDataRoutes() {\n    return this.router.events.pipe(\n      filter((evento) => evento instanceof ActivationEnd),\n      filter((evento: ActivationEnd) => evento.snapshot.firstChild === null),\n      map((evento: ActivationEnd) => evento.snapshot.data)\n    );\n  }\n}\n","<!-- ============================================================== -->\n<!-- Bread crumb and right sidebar toggle -->\n<!-- ============================================================== -->\n<div class=\"row page-titles\">\n    <div class=\"col-md-5 align-self-center\">\n        <h3 class=\"text-themecolor\">{{ titulo }}</h3>\n    </div>\n    <div class=\"col-md-7 align-self-center\">\n        <ol class=\"breadcrumb\">\n            <li class=\"breadcrumb-item\">\n                <a href=\"/panel-principal\">Inicio</a>\n            </li>\n            <li class=\"breadcrumb-item\">Páginas</li>\n            <li class=\"breadcrumb-item active\">{{ titulo }}</li>\n        </ol>\n    </div>\n</div>\n<!-- ============================================================== -->\n<!-- End Bread crumb and right sidebar toggle -->\n<!-- ============================================================== -->","import { Component, OnInit } from '@angular/core';\nimport { LoginService, ProgramaService } from 'src/app/services/service.index';\nimport { Router } from '@angular/router';\n\ndeclare function init_plugins();\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styles: [],\n})\nexport class NavbarComponent implements OnInit {\n  // Obtenemos toda la información del usuario\n  info: any;\n  tipoUsuario: string;\n  programa: String;\n\n  // Inyectamos el loginService para hacer el logOut directamente en el html\n  constructor(\n    public _loginService: LoginService,\n    public _programaService: ProgramaService,\n    public router: Router\n  ) {}\n\n  ngOnInit(): void {\n    init_plugins();\n    this.getPrograma();\n    this.setInfo();\n  }\n\n  // Obtenemos el programa y lo pasamos a la variable Programa\n  getPrograma() {\n    this._programaService.getPrograma().subscribe((resp) => {\n      let infoPrograma = resp['programa'];\n      console.log(infoPrograma);\n      this.programa = infoPrograma.nombre;\n    });\n  }\n\n  // \"Ponemos\" el restod e información a las variables globales\n  setInfo() {\n    let estudiante = localStorage.getItem('estudiante');\n    let administrativo = localStorage.getItem('administrativo');\n\n    if (estudiante) {\n      this.tipoUsuario = 'estudiante';\n      this.info = JSON.parse(estudiante);\n    } else {\n      this.tipoUsuario = 'administrativo';\n      this.info = JSON.parse(administrativo);\n    }\n  }\n\n  // Función que direcciona cuando se da click en \"perfil\"\n  irPerfil() {\n    this.router.navigate(['/perfil']);\n  }\n}\n","<!-- ============================================================== -->\n<!-- Topbar header - style you can find in pages.scss -->\n<!-- ============================================================== -->\n<header class=\"topbar\">\n    <nav class=\"navbar top-navbar navbar-expand-md navbar-light\">\n        <!-- ============================================================== -->\n        <!-- Logo -->\n        <!-- ============================================================== -->\n        <div class=\"navbar-header\">\n            <a class=\"navbar-brand\" href=\"index.html\">\n                <!-- Logo icon --><b>\n                    <img src=\"assets/images/logos/logosolo-01.png\" height=\"58px\" alt=\"homepage\" class=\"light-logo\" />\n                        </b>\n                <!--End Logo icon -->\n                <!-- Logo text --><span>\n                    &nbsp;\n                    <img src=\"assets/images/logos/logoletra-01.png\" height=\"28px\" class=\"light-logo\" alt=\"homepage\" /></span> </a>\n        </div>\n        <!-- ============================================================== -->\n        <!-- End Logo -->\n        <!-- ============================================================== -->\n        <div class=\"navbar-collapse\">\n            <!-- ============================================================== -->\n            <!-- toggle and nav items -->\n            <!-- ============================================================== -->\n            <ul class=\"navbar-nav mr-auto\">\n                <!-- This is  -->\n                <li class=\"nav-item\"> <a class=\"nav-link nav-toggler hidden-md-up waves-effect waves-dark\" href=\"javascript:void(0)\"><i class=\"ti-menu\"></i></a> </li>\n                <li class=\"nav-item\"> <a class=\"nav-link sidebartoggler hidden-sm-down waves-effect waves-dark\" href=\"javascript:void(0)\"><i class=\"ti-menu\"></i></a> </li>\n                <!--<li class=\"nav-item hidden-sm-down\"></li>-->\n            </ul>\n            <!-- ============================================================== -->\n            <!-- User profile and search -->\n            <!-- ============================================================== -->\n            <ul class=\"navbar-nav my-lg-0\">\n                <!-- ============================================================== -->\n                <!-- Messages -->\n                <!-- ============================================================== -->\n                <li class=\"nav-item dropdown\">\n                    <a class=\"nav-link dropdown-toggle waves-effect waves-dark\" href=\"\" id=\"2\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"> <i class=\"mdi mdi-email\"></i>\n                        <div class=\"notify\"> <span class=\"heartbit\"></span> <span class=\"point\"></span> </div>\n                    </a>\n                    <div class=\"dropdown-menu mailbox dropdown-menu-right animated fadeIn\" aria-labelledby=\"2\">\n                        <ul>\n                            <li>\n                                <div class=\"drop-title\">You have 4 new messages</div>\n                            </li>\n                            <li>\n                                <div class=\"message-center\">\n                                    <!-- Message -->\n                                    <a href=\"#\">\n                                        <div class=\"user-img\"> <img src=\"../assets/images/users/1.jpg\" alt=\"user\" class=\"img-circle\"> <span class=\"profile-status online pull-right\"></span> </div>\n                                        <div class=\"mail-contnet\">\n                                            <h5>Pavan kumar</h5> <span class=\"mail-desc\">Just see the my admin!</span> <span class=\"time\">9:30 AM</span> </div>\n                                    </a>\n                                    <!-- Message -->\n                                    <a href=\"#\">\n                                        <div class=\"user-img\"> <img src=\"../assets/images/users/2.jpg\" alt=\"user\" class=\"img-circle\"> <span class=\"profile-status busy pull-right\"></span> </div>\n                                        <div class=\"mail-contnet\">\n                                            <h5>Sonu Nigam</h5> <span class=\"mail-desc\">I've sung a song! See you at</span> <span class=\"time\">9:10 AM</span> </div>\n                                    </a>\n                                    <!-- Message -->\n                                    <a href=\"#\">\n                                        <div class=\"user-img\"> <img src=\"../assets/images/users/3.jpg\" alt=\"user\" class=\"img-circle\"> <span class=\"profile-status away pull-right\"></span> </div>\n                                        <div class=\"mail-contnet\">\n                                            <h5>Arijit Sinh</h5> <span class=\"mail-desc\">I am a singer!</span> <span class=\"time\">9:08 AM</span> </div>\n                                    </a>\n                                    <!-- Message -->\n                                    <a href=\"#\">\n                                        <div class=\"user-img\"> <img src=\"../assets/images/users/4.jpg\" alt=\"user\" class=\"img-circle\"> <span class=\"profile-status offline pull-right\"></span> </div>\n                                        <div class=\"mail-contnet\">\n                                            <h5>Pavan kumar</h5> <span class=\"mail-desc\">Just see the my admin!</span> <span class=\"time\">9:02 AM</span> </div>\n                                    </a>\n                                </div>\n                            </li>\n                            <li>\n                                <a class=\"nav-link text-center\" href=\"javascript:void(0);\"> <strong>See all e-Mails</strong> <i class=\"fa fa-angle-right\"></i> </a>\n                            </li>\n                        </ul>\n                    </div>\n                </li>\n                <!-- ============================================================== -->\n                <!-- End Messages -->\n                <!-- ============================================================== -->\n                <!-- ============================================================== -->\n                <!-- Profile -->\n                <!-- ============================================================== -->\n                <li class=\"nav-item dropdown\">\n                    <a class=\"nav-link dropdown-toggle waves-effect waves-dark\" href=\"\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"><img [src]=\"info.imagen | imagen: tipoUsuario\" height=\"45\" alt=\"user\" class=\"profile-pic\" /></a>\n                    <div class=\"dropdown-menu dropdown-menu-right animated fadeIn\">\n                        <ul class=\"dropdown-user\">\n                            <li>\n                                <div class=\"text-center\">\n                                    <div class=\"dw-user-box\">\n                                        <!-- De esta forma llamamos el pipe -->\n                                        <div class=\"u-img\"><img [src]=\"info.imagen | imagen: tipoUsuario\" alt=\"user\"></div>\n                                        <div class=\"u-text\">\n                                            <br>\n                                            <h4>{{info.nombres}} {{ info.apellidos }} </h4>\n\n                                            <p class=\"text-active\">{{ programa }}</p>\n                                            <p class=\"text-active\">{{ info.correo }}</p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </li>\n                            <li role=\"separator\" class=\"divider\"></li>\n                            <li><a (click)=\"irPerfil()\" class=\"pointer\"><i class=\"fa fa-id-card\"></i> &nbsp; Ver Perfil</a></li>\n                            <li *ngIf=\"tipoUsuario=='estudiante'\"><a routerLink=\"/seguimiento-proyecto-de-grado\"><i class=\"fa fa-clipboard\"></i> &nbsp;Mi solicitud</a></li>\n                            <li><a href=\"#\"><i class=\"fa fa-bell\"></i> &nbsp;Notificaciones</a></li>\n                            <li role=\"separator\" class=\"divider\"></li>\n                            <li><a (click)=\"_loginService.logOut()\" class=\"pointer\"><i class=\"fa fa-power-off\"></i> &nbsp; Cerrar Sesión</a></li>\n                        </ul>\n                    </div>\n                </li>\n            </ul>\n        </div>\n    </nav>\n</header>\n<!-- ============================================================== -->\n<!-- End Topbar header -->\n<!-- ============================================================== -->","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { BreadcrumbsComponent } from './breadcrumbs/breadcrumbs.component';\n\n// Pipes\nimport { PipesModule } from '../pipes/pipes.module';\nimport { RouterModule } from '@angular/router';\n\n\n\n@NgModule({\n  imports: [\n    PipesModule,\n    CommonModule,\n    RouterModule\n  ], \n  declarations: [\n    NavbarComponent,\n    SidebarComponent,\n    BreadcrumbsComponent\n   \n  ],\n  providers:[\n    NavbarComponent,\n    SidebarComponent,\n    BreadcrumbsComponent\n  ],\n  exports: [\n    NavbarComponent,\n    SidebarComponent, \n    BreadcrumbsComponent\n  ]\n})\nexport class SharedModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from 'src/app/services/service.index';\nimport { SidebarService } from '../../services/sidebar/sidebar.service';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  menuItems: any[];\n  EstadoPreInsc: string;\n  EstadoAnte: string;\n  EstadoProy: string;\n  EstadoDoc: string;\n\n  // Inyectamos el loginService para hacer el logOut directamente en el html\n  constructor( public _loginService: LoginService,\n    private SidebarService: SidebarService) { \n      /*this.menuItems = SidebarService.menu;\n      console.log(this.menuItems);\n      */\n    }\n\n  ngOnInit(): void {\n    this.EstadoPreInsc = JSON.parse(localStorage.getItem('estudiante')).modalidad.estado;\n    this.EstadoAnte = JSON.parse(localStorage.getItem('estudiante')).modalidad.estado_anteproyecto;\n    this.EstadoProy = JSON.parse(localStorage.getItem('estudiante')).modalidad.estado_proyecto;\n    this.EstadoDoc = JSON.parse(localStorage.getItem('estudiante')).modalidad.estado_documento_final;\n  }\n\n}\n","<!-- ============================================================== -->\n<!-- Left Sidebar - style you can find in sidebar.scss  -->\n<!-- ============================================================== -->\n<aside class=\"left-sidebar\">\n    <!-- Sidebar scroll-->\n    <div class=\"scroll-sidebar\">\n        <!-- Sidebar navigation-->\n        <nav class=\"sidebar-nav\">\n            <ul id=\"sidebarnav\">\n                <!-- Formulario de insripción-->\n                <li *ngIf=\"EstadoPreInsc ==='Rechazada'\">\n                    <a class=\"isDisabled\" routerLink=\"/dashboard\" routerLinkActive=\"active\"><img src=\"assets/svg/article.svg\"><span class=\"hide-menu\">Formulario de Inscripción</span>\n                    </a>\n                </li>\n                <li *ngIf=\"EstadoPreInsc ==='Enviada'\">\n                    <a class=\"isDisabled\" routerLink=\"/dashboard\" routerLinkActive=\"active\"><img src=\"assets/svg/article.svg\"><span class=\"hide-menu\">Formulario de Inscripción</span>\n                    </a>\n                </li>\n                <li *ngIf=\"EstadoPreInsc ==='Aprobada'\" class=\"user-profile\">\n                    <a class=\"isDisabled\" routerLink=\"/solicitud-proyecto-de-grado\" routerLinkActive=\"active\"><img src=\"assets/svg/article.svg\"><span class=\"hide-menu\">Formulario de Inscripción</span>\n                    </a>\n                </li>\n                <!-- seguimiento de modalidad-->\n                <li *ngIf=\"EstadoPreInsc ==='Rechazada'\">\n                    <a class=\"isDisabled\" routerLink=\"/dashboard\" routerLinkActive=\"active\"><img src=\"assets/svg/article.svg\"><span class=\"hide-menu\">Formulario de Inscripción</span>\n                    </a>\n                </li>\n                <li *ngIf=\"EstadoPreInsc ==='Enviada'\">\n                    <a class=\"isDisabled\" routerLink=\"/dashboard\" routerLinkActive=\"active\"><img src=\"assets/svg/article.svg\"><span class=\"hide-menu\">Formulario de Inscripción</span>\n                    </a>\n                </li>\n                <li *ngIf=\"EstadoPreInsc ==='Aprobada'\" class=\"user-profile\">\n                    <a class=\"waves-effect waves-dark\" routerLink=\"/seguimiento-proyecto-de-grado\" routerLinkActive=\"active\"><img src=\"assets/svg/article.svg\"><span class=\"hide-menu\">Seguimiento de la modalidad</span>\n                    </a>\n                </li>\n\n                <!-- Fases de modalidad-->\n                <li class=\"user-profile\">\n                    <a class=\"has-arrow waves-effect waves-dark\" href=\"#\" aria-expanded=\"true\"><img src=\"assets/svg/toc.svg\"><span class=\"hide-menu\">Fases de la modalidad</span></a>\n                    <ul aria-expanded=\"false\" class=\"collapse\">\n\n                        <!-- Anteproyecto -->\n                        <li *ngIf=\"EstadoPreInsc ==='Rechazada'\">\n                            <a class=\"isDisabled\" routerLink=\"/dashboard\" routerLinkActive=\"active\"><img src=\"assets/svg/library.svg\">Anteproyecto </a>\n                        </li>\n                        <li *ngIf=\"EstadoPreInsc ==='Enviada'\">\n                            <a class=\"isDisabled\" routerLink=\"/dashboard\" routerLinkActive=\"active\"><img src=\"assets/svg/library.svg\">Anteproyecto </a>\n                        </li>\n                        <li *ngIf=\"EstadoPreInsc ==='Aprobada'\">\n                            <a class=\"waves-effect waves-dark\" routerLink=\"/anteproyecto\" routerLinkActive=\"active\"><img src=\"assets/svg/library.svg\">Anteproyecto </a>\n                        </li>\n\n                        <!-- Proyecto -->\n\n                        <li *ngIf=\"EstadoPreInsc ==='Rechazada'\">\n                            <a class=\"isDisabled\" routerLink=\"/dashboard\" routerLinkActive=\"active\"><img src=\"assets/svg/library.svg\">Proyecto </a>\n                        </li>\n                        <li *ngIf=\"EstadoPreInsc ==='Enviada'\">\n                            <a class=\"isDisabled\" routerLink=\"/dashboard\" routerLinkActive=\"active\"><img src=\"assets/svg/library.svg\">Proyecto </a>\n                        </li>\n                        <li *ngIf=\"EstadoPreInsc ==='Aprobada'\">\n                            <a class=\"isDisabled\" routerLink=\"/proyecto\" routerLinkActive=\"active\"><img src=\"assets/svg/library.svg\">Proyecto </a>\n                        </li>\n\n                        <!-- Documento Final -->\n\n                        <li *ngIf=\"EstadoPreInsc ==='Rechazada'\">\n                            <a class=\"isDisabled\" routerLink=\"/dashboard\" routerLinkActive=\"active\"><img src=\"assets/svg/library.svg\">Documento Final </a>\n                        </li>\n                        <li *ngIf=\"EstadoPreInsc ==='Enviada'\">\n                            <a class=\"isDisabled\" routerLink=\"/dashboard\" routerLinkActive=\"active\"><img src=\"assets/svg/library.svg\">Documento Final </a>\n                        </li>\n                        <li *ngIf=\"EstadoPreInsc ==='Aprobada'\">\n                            <a class=\"isDisabled\" routerLink=\"/documento-final\" routerLinkActive=\"active\"><img src=\"assets/svg/library.svg\">Documento Final </a>\n                        </li>\n\n                    </ul>\n                </li>\n\n                <!-- Sustenteación -->\n\n\n\n                <li *ngIf=\"EstadoDoc ==='Rechazada'\">\n                    <a class=\"isDisabled\" routerLink=\"/dashboard\" routerLinkActive=\"active\"><img src=\"assets/svg/streetview.svg\">Documento Final </a>\n                </li>\n                <li *ngIf=\"EstadoDoc ==='Enviada'\">\n                    <a class=\"isDisabled\" routerLink=\"/dashboard\" routerLinkActive=\"active\"><img src=\"assets/svg/streetview.svg\">Documento Final </a>\n                </li>\n                <li *ngIf=\"EstadoDoc ==='Aprobada'\">\n                    <a class=\"waves-effect waves-dark\" routerLink=\"/sustentacion\" routerLinkActive=\"active\"><img src=\"assets/svg/streetview.svg\">Documento Final </a>\n                </li>\n\n\n\n\n\n\n            </ul>\n        </nav>\n        <!-- End Sidebar navigation -->\n    </div>\n    <!-- End Sidebar scroll-->\n</aside>\n<!-- ============================================================== -->\n<!-- End Left Sidebar - style you can find in sidebar.scss  -->\n<!-- ============================================================== -->","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}